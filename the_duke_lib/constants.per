;Common Constants used in goals of my AI - other constants will follow the specific goals
	;Common.
		(defconst GOLD-MINE 66)
		(defconst STONE-MINE 102)
		(defconst RELIC 285)

		(defconst GAIA 0)
		(defconst NO 0)
		(defconst YES 1)
		(defconst MAYBE 2)
		(defconst POSSIBLE 3)
		(defconst NOT-POSSIBLE 4)
		(defconst NOTICE 5)
		(defconst NOW 8)
		(defconst LONG 9)
		(defconst FIRST 10)
		(defconst IN-TWENTY-MINUTES 11)
		(defconst DEER 65)
		(defconst SHEEP 594)
		(defconst BERRY-BUSH 59)
		(defconst TURKEY 833)
		(defconst BOAR 48)
		(defconst WOLF 126)
		(defconst JAGUAR-ANIMAL 812)
		(defconst KING 434)
		(defconst TRADE-WORKSHOP 110)
		(defconst MESJID 655)
		(defconst MONUMENT 526)
		(defconst SNOWPINETREE 413)
#load-if-not-defined DEATH-MATCH
		(defconst FEUDAL-RESEARCH-TIME 600)
		(defconst FEUDAL-RESEARCH-TIME-FAST-FEUDAL 120)
		(defconst FEUDAL-RESEARCH-TIME-MIDDLE-FEUDAL 540)
		(defconst FEUDAL-RESEARCH-TIME-LATE-FEUDAL 660)
		(defconst CASTLE-RESEARCH-TIME-EASIEST 1400)
		(defconst CASTLE-RESEARCH-TIME-EASY 1200)
		(defconst CASTLE-RESEARCH-TIME-MODERATE 860)
		(defconst CASTLE-RESEARCH-TIME-FAST-CASTLE 300)
		(defconst CASTLE-RESEARCH-TIME-MIDDLE-CASTLE 840)
		(defconst CASTLE-RESEARCH-TIME-LATE-CASTLE 900)
		(defconst IMPERIAL-RESEARCH-TIME-EASIEST 3000)
		(defconst IMPERIAL-RESEARCH-TIME-EASY 3000)
		(defconst IMPERIAL-RESEARCH-TIME-MODERATE 1260)
		(defconst IMPERIAL-RESEARCH-TIME-FAST-IMPERIAL 1200)
		(defconst IMPERIAL-RESEARCH-TIME-MIDDLE-IMPERIAL 1500)
		(defconst IMPERIAL-RESEARCH-TIME-LATE-IMPERIAL 1800)

#else ;if game type != death match

		(defconst FEUDAL-RESEARCH-TIME 600)
		(defconst FEUDAL-RESEARCH-TIME-FAST-FEUDAL 50)
		(defconst FEUDAL-RESEARCH-TIME-MIDDLE-FEUDAL 100)
		(defconst FEUDAL-RESEARCH-TIME-LATE-FEUDAL 130)
		(defconst CASTLE-RESEARCH-TIME-EASIEST 720)
		(defconst CASTLE-RESEARCH-TIME-EASY 650)
		(defconst CASTLE-RESEARCH-TIME-MODERATE 420)
		(defconst CASTLE-RESEARCH-TIME-FAST-CASTLE 200)
		(defconst CASTLE-RESEARCH-TIME-MIDDLE-CASTLE 300)
		(defconst CASTLE-RESEARCH-TIME-LATE-CASTLE 400)
		(defconst IMPERIAL-RESEARCH-TIME-EASIEST 900)
		(defconst IMPERIAL-RESEARCH-TIME-EASY 800)
		(defconst IMPERIAL-RESEARCH-TIME-MODERATE 600)
		(defconst IMPERIAL-RESEARCH-TIME-FAST-IMPERIAL 300)
		(defconst IMPERIAL-RESEARCH-TIME-MIDDLE-IMPERIAL 400)
		(defconst IMPERIAL-RESEARCH-TIME-LATE-IMPERIAL 500)
#end-if

;GOALS (VALID IDs: 1-40)

;goal 1 = RESOURCE-NEEDED - it helps to show which resource-type is needed at the moment
		(defconst RESOURCE-NEEDED 1)
		;(defconst NO 0)
		(defconst FOOD 1)
		(defconst WOOD 2)
		(defconst GOLD 3)
		(defconst CAN-CHANGE-RESOURCE-NEEDED-GOAL 2)
		;(defconst NO 0)

;goal 3 = TRAIN-NEXT-FIRESHIP - checks whether we should train a fire ship
		(defconst TRAIN-NEXT-FIRESHIP 3)
		;(defconst NO 0)
		(defconst NEVER 3)

;goal 4
		(defconst TRAIN-VILLAGERS 4)
		;(defconst NO 0)
		(defconst EXTRA 3)
;goal 5 1: research the feudal-age very fast ; goal 5 2: research feudal-age with an average time ; goal 5 3: research feudal-age very slowly
		(defconst RESEARCHING-FEUDAL 5)
		(defconst FAST-FEUDAL 1)
		(defconst MIDDLE-FEUDAL 2)
		(defconst LATE-FEUDAL 3)
	;goal 6 1: research the castle-age very fast ; goal 6 2: research castle-age with an average time ; goal 6 3: research castle-age very slowly
		(defconst RESEARCHING-CASTLE 6)
		(defconst FAST-CASTLE 1)
		(defconst MIDDLE-CASTLE 2)
		(defconst LATE-CASTLE 3)
	;goal 7 1: research the imperial-age very fast ; goal 7 2: research imperial-age with an average time ; goal 7 3: research imperial-age very slowly
		(defconst RESEARCHING-IMPERIAL 7)
		(defconst FAST-IMPERIAL 1)
		(defconst MIDDLE-IMPERIAL 2)
		(defconst LATE-IMPERIAL 3)

;goal 8
		(defconst ADVANCE-TO-THE-NEXT-AGE 8)
		;(defconst NO 0)

;goal 9 = SAVE-FOR-RESEARCH - controls periodic stops in unit training to save for research
		(defconst SAVE-FOR-RESEARCH 9)
		;(defconst NO 0)
		;(defconst YES 1)
		;(defconst MAYBE 2)

;goal 10 = HUMAN-DIPLOMACY - it is used to change the stance to an human-ally
		(defconst HUMAN-DIPLOMACY 10)
		(defconst ANGRY 3)
		(defconst ANGRIER 4)
		(defconst ANGRIEST 5)
		(defconst GET-NEW-FRIEND 11)
		;(defconst NO 0)
		;(defconst POSSIBLE 3)
		(defconst RESOURCES 5)
		(defconst RESOURCES-FOOD 6)
		(defconst RESOURCES-WOOD 7)
		(defconst RESOURCES-GOLD 8)
		(defconst RESOURCES-STONE 9)
		(defconst DONE 10)

;goal 12 = ABLE-TO-BUILD-BARRACKS - it shows whether we can build barracks as a forward building
		(defconst ABLE-TO-BUILD-BARRACKS 12)
		;(defconst NO 0)

;goal 13 = ABLE-TO-BUILD-ARCHERY-RANGE - it shows whether we can build archery-range as a forward building
		(defconst ABLE-TO-BUILD-ARCHERY-RANGE 13)
		;(defconst NO 0)

;goal 14 = ABLE-TO-BUILD-STABLE - it shows whether we can build stable as a forward building
		(defconst ABLE-TO-BUILD-STABLE 14)
		;(defconst NO 0)

;goal 15 = G-ABLE-TO-UPGRADE-INFANTRY - shows whether the conditions of upgrading the militiaman-line in the different ages are full-filled
		(defconst G-ABLE-TO-UPGRADE-INFANTRY 15)
		;(defconst NO 0)
		(defconst LOW 2)
		(defconst MIDDLE 3)
		(defconst HIGH 4)

;goal16
		(defconst G-ABLE-TO-UPGRADE-ARCHERS 16)
		;(defconst NO 0)
		;(defconst LOW 2)

;goal 17 = G-ABLE-TO-UPGRADE-CAVALRY - shows whether the conditions of upgrading the cavalry in the different ages are full-filled
		(defconst G-ABLE-TO-UPGRADE-CAVALRY 17)
		;(defconst NO 0)
		;(defconst LOW 2)

;goal 18 = CAN-USE-TOWN-SIZE-ATTACK - checks if we use a tsa or not
		(defconst CAN-USE-TOWN-SIZE-ATTACK 18)
		;(defconst NO 0)

;goal 19 = ABLE-TO-TRAIN-LAND-UNITS - helps the ai to limit land soldiers to have enough population headroom to train a fleet on water maps
		(defconst ABLE-TO-TRAIN-LAND-UNITS 19)
		;(defconst NO 0)

;goal 22 = ATTACK-PERSONALITY - used to define whether the AI is an attacker or a defender
(defconst ATTACK-PERSONALITY 22)
		(defconst ATTACKER 1)
		(defconst DEFENDER 2)

(defconst ABLE-TO-ATTACK 23)
		;(defconst NO 0)
		(defconst ALLY-WANT-US-TO-ATTACK 2)

(defconst RUSH-ATTACK-STARTED 24)
		;(defconst NO 0)

;goal 25 = MILITARY-PARITY - it checks the number of enemy units to inform our allies
		(defconst MILITARY-PARITY 25)
		;(defconst NO 0)
		(defconst VASTLY-INFERIOR 2)
		(defconst INFERIOR 3)
		(defconst PARITY 4)
		(defconst SUPERIOR 5)
		(defconst VASTLY-SUPERIOR 6)
		(defconst UNKNOWN 7)
		(defconst MAIN-SHIP-BUILDER 26)
		;(defconst NO 0)

;goal 27 = RUSH-CONTROL - it shows whether we'll do a rush and if yes in which age ;; this goal is also used to check the resign conditions
		(defconst RUSH-CONTROL 27)
		;(defconst NO 0)
		(defconst FEUDAL 2)
		(defconst CASTLE 3)
		(defconst RUSHING 6)
		(defconst ENABLE 7)
		(defconst RESIGN 8)
		(defconst RESIGN-NOW 9)
		(defconst DEFINE-UNITS-FLUSH 10)
		(defconst DEFINE-UNITS-CASTLE-RUSH 11)
		(defconst PRIVILEGED 12)
;goal 28
(defconst ABLE-TO-TRAIN-UNITS 28)
		;(defconst NO 0)

;goal 29 = WONDER-ATTEMPT - shows whether we are able to build a wonder or we play defend-the wonder (than make sure if we are attacker or defender)
		(defconst WONDER-ATTEMPT 29)
		;(defconst NO 0)
		;(defconst MAYBE 3)
		(defconst ATTACK 5)
		(defconst DEFEND 6)
;goal 30 
(defconst COMBAT-COMBO-PARITY 30)
		(defconst NDEFINED 0)
		(defconst DEFINED 1)
		;(defconst FIRST 10)
;goal 31 
(defconst G-PRIMARY-UNIT 31)
		;(defconst NO 0)

;goal 32 
(defconst G-PRIMARY-UNIT2 32)
		;(defconst NO 0)

		;(defconst spearman-line 30)
;goal 33 
(defconst G-SECONDARY-UNIT 33)
		;uses the same values that the goal G-PRIMARY-UNIT uses

;goal 34 = G-SECONDARY-UNIT2 - shows from which unit-type the AI will train much of the units to attack another player; used for the feature that the duke-ai useer can tell the ai which units it should train
		(defconst G-SECONDARY-UNIT2 34)
		;uses the same values that the goal G-PRIMARY-UNIT uses

;goal 35 = PRIMARY-COMBAT-SIEGE-UNIT - shows from which siege the AI will train plenty

		(defconst PRIMARY-COMBAT-SIEGE-UNIT 35)
		;(defconst NO 0)

		(defconst PRIMARY-COMBAT-SIEGE-UNIT2 36)
		;(defconst NO 0)

		(defconst SECONDARY-COMBAT-SIEGE-UNIT 37)
		;uses the same values that the goal PRIMARY-COMBAT-SIEGE-UNIT uses

;goal 38 = SECONDARY-COMBAT-SIEGE-UNIT2 - shows from which siege the AI will train only a few; used for the feature that the duke-ai useer can tell the ai which units it should train

		(defconst SECONDARY-COMBAT-SIEGE-UNIT2 38)
		;uses the same values that the goal PRIMARY-COMBAT-SIEGE-UNIT uses


;goal 39 = HOW-MANY-PLAYERS - counts how many players are in the game, used to make the rushes dependent on the number of players in the game
		(defconst HOW-MANY-PLAYERS 39)
		(defconst TWO 2)
		(defconst THREE 3)
		(defconst FOUR 4)
		(defconst FIVE 5)
		(defconst SIX 6)
		(defconst SEVEN 7)
		(defconst EIGHT 8)

(defconst MAP-KIND 40)
		(defconst WATER-MAP 1)
		(defconst RIVERS-MAP 2)
		(defconst ISLAND-MAP 3)
		(defconst LAND-MAP 4)

;goal 41
(defconst ATTACK-STATE 41)
	(defconst STOP 0)
	(defconst READY 1)
	(defconst RETREATING 2)
	(defconst PREPARING 3)
	(defconst PULLING-TROOPS 4)
	(defconst ATTACKING 5)
	(defconst RESET-TOWN-SIZE 6)
	(defconst TOWN-SIZE-RESETTED 7)

(defconst TOWN-SIZE-FOR-BUILDING 42)
(defconst TOWN-SIZE-FOR-ATTACKING 43)

(defconst FIND-NEW-ENEMY 44)

(defconst TEMPORARY-GOAL 45)
(defconst TEMPORARY-GOAL2 46)
(defconst TEMPORARY-GOAL3 47)

(defconst ALL-ECONOMY-TECH-DONE 48)
	;YES / NO

(defconst ALL-MILITARY-TECH-DONE 49)
	;YES / NO

(defconst G-UPGRADED-PRIMARY-UNIT 50)
	;YES / NO

(defconst G-UPGRADED-SECONDARY-UNIT 51)
	;YES / NO

(defconst UNDER-ATTACK 52)
	;YES / NO

(defconst G-CAN-TRAIN-PRIMARY-UNIT 53)
	;YES / NO

(defconst G-CAN-TRAIN-SECONDARY-UNIT 54)
	;YES / NO

(defconst G-PRIMARY-AND-SECONDARY-UNIT-COUNT-DIFF 55)

(defconst G-CAN-RETREAT-FROM-PROJECTILES 56)

;-------------------------------------

(defconst T-TRIBUTE 1)
(defconst T-DIPLOMACY 2)
(defconst T-ATTACK 3)
(defconst T-NEED-HELP 4)
(defconst T-GET-NEW-FRIEND 5)
(defconst T-SAVE-FOR-RESEARCH 6)
;7 is free atm
(defconst T-GET-RESOURCE 8)
(defconst T-COMBAT-COMBOS 9)
(defconst T-RESIGN 10)
(defconst T-HUNTING 11)
(defconst T-VILLAGER-TRAINING 12)
(defconst T-INCREASE-CAMP-DISTANCE 13)
(defconst T-INCREASE-TOWN-SIZE 14)
(defconst T-MILITARY-PARITY 15)
(defconst T-RETREAT 16)
(defconst T-LUMBER-CAMP 17)
(defconst T-RETREAT-FROM-PROJECTILES 18)

;---------------------------------------


;CONSTANTS THAT ARE LOADED WHEN WE'RE PLAYING ON POP-CAP 25
;----------------------------------------------------------------------------------------------------------



#load-if-defined POPULATION-CAP-25

(defconst MIN-EAGLE-WARRIORS-TO-START-RUSH 5)
(defconst IMPERIAL-AGE-VILLAGER 12)
(defconst IMPERIAL-AGE-VILLAGER-COMMAND 16)

(defconst TRADE-REPLACES-VILLAGER 13)
(defconst NUM-TRADE-CARTS-LATE-GAME 1)

#load-if-defined DIFFICULTY-EASIEST
(defconst POPULATION-MAX 11)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst POPULATION-MAX 11)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst POPULATION-MAX 13)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst POPULATION-MAX 14)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst POPULATION-MAX 14)
#end-if

#load-if-not-defined GOTHIC-CIV

#load-if-defined DIFFICULTY-EASIEST
(defconst MILITARY-POPULATION-MAX 14)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst MILITARY-POPULATION-MAX 14)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst MILITARY-POPULATION-MAX 12)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst MILITARY-POPULATION-MAX 11)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst MILITARY-POPULATION-MAX 11)
#end-if

#else		;if civ != gothic

#load-if-defined DIFFICULTY-EASIEST
(defconst MILITARY-POPULATION-MAX 24)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst MILITARY-POPULATION-MAX 24)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst MILITARY-POPULATION-MAX 22)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst MILITARY-POPULATION-MAX 21)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst MILITARY-POPULATION-MAX 21)
#end-if

#end-if		;if civ == gothic


(defconst ZERO-PERCENT-POP 0)
(defconst ONE-PERCENT-POP 1)
(defconst NEGATIVE-ONE-PERCENT-POP -1)
(defconst TWO-PERCENT-POP 1)
(defconst NEGATIVE-TWO-PERCENT-POP -1)
(defconst THREE-PERCENT-POP 1)
(defconst FOUR-PERCENT-POP 1)
(defconst FIVE-PERCENT-POP 1)
(defconst SIX-PERCENT-POP 1)
(defconst SEVEN-PERCENT-POP 1)
(defconst EIGHT-PERCENT-POP 2)
(defconst NINE-PERCENT-POP 2)
(defconst TEN-PERCENT-POP 2)
(defconst ELEVEN-PERCENT-POP 2)
(defconst TWELVE-PERCENT-POP 3)
(defconst THIRTEEN-PERCENT-POP 3)
(defconst FOURTEEN-PERCENT-POP 3)
(defconst FIFTEEN-PERCENT-POP 3)
(defconst SIXTEEN-PERCENT-POP 4)
(defconst SEVENTEEN-PERCENT-POP 4)
(defconst EIGHTTEEN-PERCENT-POP 4)
(defconst NINETEEN-PERCENT-POP 4)
(defconst TWENTY-PERCENT-POP 5)
(defconst TWENTY-ONE-PERCENT-POP 5)
(defconst TWENTY-TWO-PERCENT-POP 5)
(defconst TWENTY-THREE-PERCENT-POP 5)
(defconst TWENTY-FOUR-PERCENT-POP 6)
(defconst TWENTY-FIVE-PERCENT-POP 6)
(defconst TWENTY-SIX-PERCENT-POP 6)
(defconst TWENTY-SEVEN-PERCENT-POP 6)
(defconst TWENTY-EIGHT-PERCENT-POP 7)
(defconst TWENTY-NINE-PERCENT-POP 7)
(defconst THIRTY-PERCENT-POP 7)
(defconst THIRTY-FIVE-PERCENT-POP 8)
(defconst FOURTY-PERCENT-POP 10)
(defconst FOURTY-FIVE-PERCENT-POP 11)
(defconst FIFTY-PERCENT-POP 12)
(defconst FIFTY-FIVE-PERCENT-POP 13)
(defconst SIXTY-PERCENT-POP 15)
(defconst SIXTY-FIVE-PERCENT-POP 16)
(defconst SEVENTY-PERCENT-POP 17)
(defconst SEVENTY-FIVE-PERCENT-POP 18)
(defconst EIGHTY-PERCENT-POP 20)
(defconst EIGHTY-FIVE-PERCENT-POP 21)
(defconst NINTY-PERCENT-POP 22)
(defconst NINTY-FIVE-PERCENT-POP 23)
(defconst HUNDRED-PERCENT-POP 25)

#end-if		;if POP-CAP 25



;CONSTANTS THAT ARE LOADED WHEN WE'RE PLAYING ON POP-CAP 50
;----------------------------------------------------------------------------------------------------------



#load-if-defined POPULATION-CAP-50

(defconst MIN-EAGLE-WARRIORS-TO-START-RUSH 8)
(defconst IMPERIAL-AGE-VILLAGER 25)
(defconst IMPERIAL-AGE-VILLAGER-COMMAND 32)

(defconst NUM-TRADE-CARTS-LATE-GAME 3)
(defconst TRADE-REPLACES-VILLAGER 22)

#load-if-defined DIFFICULTY-EASIEST
(defconst POPULATION-MAX 15)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst POPULATION-MAX 18)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst POPULATION-MAX 23)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst POPULATION-MAX 25)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst POPULATION-MAX 27)
#end-if

#load-if-not-defined GOTHIC-CIV

#load-if-defined DIFFICULTY-EASIEST
(defconst MILITARY-POPULATION-MAX 20)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst MILITARY-POPULATION-MAX 25)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst MILITARY-POPULATION-MAX 27)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst MILITARY-POPULATION-MAX 25)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst MILITARY-POPULATION-MAX 23)
#end-if

#else		;if civ != gothic

#load-if-defined DIFFICULTY-EASIEST
(defconst MILITARY-POPULATION-MAX 20)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst MILITARY-POPULATION-MAX 25)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst MILITARY-POPULATION-MAX 37)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst MILITARY-POPULATION-MAX 35)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst MILITARY-POPULATION-MAX 33)
#end-if

#end-if		;if civ == gothic


(defconst ZERO-PERCENT-POP 0)
(defconst ONE-PERCENT-POP 1)
(defconst NEGATIVE-ONE-PERCENT-POP -1)
(defconst TWO-PERCENT-POP 1)
(defconst NEGATIVE-TWO-PERCENT-POP -1)
(defconst THREE-PERCENT-POP 1)
(defconst FOUR-PERCENT-POP 2)
(defconst FIVE-PERCENT-POP 2)
(defconst SIX-PERCENT-POP 3)
(defconst SEVEN-PERCENT-POP 3)
(defconst EIGHT-PERCENT-POP 4)
(defconst NINE-PERCENT-POP 4)
(defconst TEN-PERCENT-POP 5)
(defconst ELEVEN-PERCENT-POP 5)
(defconst TWELVE-PERCENT-POP 6)
(defconst THIRTEEN-PERCENT-POP 6)
(defconst FOURTEEN-PERCENT-POP 7)
(defconst FIFTEEN-PERCENT-POP 7)
(defconst SIXTEEN-PERCENT-POP 8)
(defconst SEVENTEEN-PERCENT-POP 8)
(defconst EIGHTTEEN-PERCENT-POP 9)
(defconst NINETEEN-PERCENT-POP 9)
(defconst TWENTY-PERCENT-POP 10)
(defconst TWENTY-ONE-PERCENT-POP 10)
(defconst TWENTY-TWO-PERCENT-POP 11)
(defconst TWENTY-THREE-PERCENT-POP 11)
(defconst TWENTY-FOUR-PERCENT-POP 12)
(defconst TWENTY-FIVE-PERCENT-POP 12)
(defconst TWENTY-SIX-PERCENT-POP 13)
(defconst TWENTY-SEVEN-PERCENT-POP 13)
(defconst TWENTY-EIGHT-PERCENT-POP 14)
(defconst TWENTY-NINE-PERCENT-POP 14)
(defconst THIRTY-PERCENT-POP 15)
(defconst THIRTY-FIVE-PERCENT-POP 17)
(defconst FOURTY-PERCENT-POP 20)
(defconst FOURTY-FIVE-PERCENT-POP 22)
(defconst FIFTY-PERCENT-POP 25)
(defconst FIFTY-FIVE-PERCENT-POP 27)
(defconst SIXTY-PERCENT-POP 30)
(defconst SIXTY-FIVE-PERCENT-POP 32)
(defconst SEVENTY-PERCENT-POP 35)
(defconst SEVENTY-FIVE-PERCENT-POP 37)
(defconst EIGHTY-PERCENT-POP 40)
(defconst EIGHTY-FIVE-PERCENT-POP 42)
(defconst NINTY-PERCENT-POP 45)
(defconst NINTY-FIVE-PERCENT-POP 47)
(defconst HUNDRED-PERCENT-POP 50)

#end-if		;if POP-CAP 50



;CONSTANTS THAT ARE LOADED WHEN WE'RE PLAYING ON POP-CAP 75
;----------------------------------------------------------------------------------------------------------



#load-if-defined POPULATION-CAP-75

(defconst MIN-EAGLE-WARRIORS-TO-START-RUSH 16)
(defconst IMPERIAL-AGE-VILLAGER 40)
(defconst IMPERIAL-AGE-VILLAGER-COMMAND 45)

(defconst NUM-TRADE-CARTS-LATE-GAME 4)
(defconst TRADE-REPLACES-VILLAGER 36)

#load-if-defined DIFFICULTY-EASIEST
(defconst POPULATION-MAX 28)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst POPULATION-MAX 32)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst POPULATION-MAX 36)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst POPULATION-MAX 40)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst POPULATION-MAX 40)
#end-if

#load-if-not-defined GOTHIC-CIV

#load-if-defined DIFFICULTY-EASIEST
(defconst MILITARY-POPULATION-MAX 20)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst MILITARY-POPULATION-MAX 25)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst MILITARY-POPULATION-MAX 39)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst MILITARY-POPULATION-MAX 35)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst MILITARY-POPULATION-MAX 35)
#end-if

#else		;if civ != gothic

#load-if-defined DIFFICULTY-EASIEST
(defconst MILITARY-POPULATION-MAX 20)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst MILITARY-POPULATION-MAX 25)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst MILITARY-POPULATION-MAX 49)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst MILITARY-POPULATION-MAX 45)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst MILITARY-POPULATION-MAX 45)
#end-if

#end-if		;if civ == gothic


(defconst ZERO-PERCENT-POP 0)
(defconst ONE-PERCENT-POP 1)
(defconst NEGATIVE-ONE-PERCENT-POP -1)
(defconst TWO-PERCENT-POP 1)
(defconst NEGATIVE-TWO-PERCENT-POP -1)
(defconst THREE-PERCENT-POP 2)
(defconst FOUR-PERCENT-POP 3)
(defconst FIVE-PERCENT-POP 3)
(defconst SIX-PERCENT-POP 4)
(defconst SEVEN-PERCENT-POP 5)
(defconst EIGHT-PERCENT-POP 5)
(defconst NINE-PERCENT-POP 6)
(defconst TEN-PERCENT-POP 7)
(defconst ELEVEN-PERCENT-POP 8)
(defconst TWELVE-PERCENT-POP 9)
(defconst THIRTEEN-PERCENT-POP 9)
(defconst FOURTEEN-PERCENT-POP 10)
(defconst FIFTEEN-PERCENT-POP 11)
(defconst SIXTEEN-PERCENT-POP 12)
(defconst SEVENTEEN-PERCENT-POP 12)
(defconst EIGHTTEEN-PERCENT-POP 13)
(defconst NINETEEN-PERCENT-POP 14)
(defconst TWENTY-PERCENT-POP 15)
(defconst TWENTY-ONE-PERCENT-POP 15)
(defconst TWENTY-TWO-PERCENT-POP 16)
(defconst TWENTY-THREE-PERCENT-POP 17)
(defconst TWENTY-FOUR-PERCENT-POP 18)
(defconst TWENTY-FIVE-PERCENT-POP 18)
(defconst TWENTY-SIX-PERCENT-POP 19)
(defconst TWENTY-SEVEN-PERCENT-POP 20)
(defconst TWENTY-EIGHT-PERCENT-POP 21)
(defconst TWENTY-NINE-PERCENT-POP 21)
(defconst THIRTY-PERCENT-POP 22)
(defconst THIRTY-FIVE-PERCENT-POP 26)
(defconst FOURTY-PERCENT-POP 30)
(defconst FOURTY-FIVE-PERCENT-POP 33)
(defconst FIFTY-PERCENT-POP 37)
(defconst FIFTY-FIVE-PERCENT-POP 41)
(defconst SIXTY-PERCENT-POP 45)
(defconst SIXTY-FIVE-PERCENT-POP 48)
(defconst SEVENTY-PERCENT-POP 53)
(defconst SEVENTY-FIVE-PERCENT-POP 56)
(defconst EIGHTY-PERCENT-POP 60)
(defconst EIGHTY-FIVE-PERCENT-POP 63)
(defconst NINTY-PERCENT-POP 67)
(defconst NINTY-FIVE-PERCENT-POP 71)
(defconst HUNDRED-PERCENT-POP 75)

#end-if		;if POP-CAP 75



;CONSTANTS THAT ARE LOADED WHEN WE'RE PLAYING ON POP-CAP 100
;-----------------------------------------------------------



#load-if-defined POPULATION-CAP-100

(defconst MIN-EAGLE-WARRIORS-TO-START-RUSH 16)
(defconst IMPERIAL-AGE-VILLAGER 54)
(defconst IMPERIAL-AGE-VILLAGER-COMMAND 60)

(defconst NUM-TRADE-CARTS-LATE-GAME 5)
(defconst TRADE-REPLACES-VILLAGER 49)

#load-if-defined DIFFICULTY-EASIEST
(defconst POPULATION-MAX 25)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst POPULATION-MAX 35)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst POPULATION-MAX 47)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst POPULATION-MAX 54)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst POPULATION-MAX 54)
#end-if

#load-if-not-defined GOTHIC-CIV

#load-if-defined DIFFICULTY-EASIEST
(defconst MILITARY-POPULATION-MAX 20)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst MILITARY-POPULATION-MAX 25)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst MILITARY-POPULATION-MAX 53)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst MILITARY-POPULATION-MAX 46)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst MILITARY-POPULATION-MAX 46)
#end-if

#else		;if civ != gothic

#load-if-defined DIFFICULTY-EASIEST
(defconst MILITARY-POPULATION-MAX 20)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst MILITARY-POPULATION-MAX 25)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst MILITARY-POPULATION-MAX 63)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst MILITARY-POPULATION-MAX 56)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst MILITARY-POPULATION-MAX 56)
#end-if

#end-if		;if civ == gothic


(defconst ZERO-PERCENT-POP 0)
(defconst ONE-PERCENT-POP 1)
(defconst NEGATIVE-ONE-PERCENT-POP -1)
(defconst TWO-PERCENT-POP 2)
(defconst NEGATIVE-TWO-PERCENT-POP -2)
(defconst THREE-PERCENT-POP 3)
(defconst FOUR-PERCENT-POP 4)
(defconst FIVE-PERCENT-POP 5)
(defconst SIX-PERCENT-POP 6)
(defconst SEVEN-PERCENT-POP 7)
(defconst EIGHT-PERCENT-POP 8)
(defconst NINE-PERCENT-POP 9)
(defconst TEN-PERCENT-POP 10)
(defconst ELEVEN-PERCENT-POP 11)
(defconst TWELVE-PERCENT-POP 12)
(defconst THIRTEEN-PERCENT-POP 13)
(defconst FOURTEEN-PERCENT-POP 14)
(defconst FIFTEEN-PERCENT-POP 15)
(defconst SIXTEEN-PERCENT-POP 16)
(defconst SEVENTEEN-PERCENT-POP 17)
(defconst EIGHTTEEN-PERCENT-POP 18)
(defconst NINETEEN-PERCENT-POP 19)
(defconst TWENTY-PERCENT-POP 20)
(defconst TWENTY-ONE-PERCENT-POP 21)
(defconst TWENTY-TWO-PERCENT-POP 22)
(defconst TWENTY-THREE-PERCENT-POP 23)
(defconst TWENTY-FOUR-PERCENT-POP 24)
(defconst TWENTY-FIVE-PERCENT-POP 25)
(defconst TWENTY-SIX-PERCENT-POP 26)
(defconst TWENTY-SEVEN-PERCENT-POP 27)
(defconst TWENTY-EIGHT-PERCENT-POP 28)
(defconst TWENTY-NINE-PERCENT-POP 29)
(defconst THIRTY-PERCENT-POP 30)
(defconst THIRTY-FIVE-PERCENT-POP 35)
(defconst FOURTY-PERCENT-POP 40)
(defconst FOURTY-FIVE-PERCENT-POP 45)
(defconst FIFTY-PERCENT-POP 50)
(defconst FIFTY-FIVE-PERCENT-POP 55)
(defconst SIXTY-PERCENT-POP 60)
(defconst SIXTY-FIVE-PERCENT-POP 65)
(defconst SEVENTY-PERCENT-POP 70)
(defconst SEVENTY-FIVE-PERCENT-POP 75)
(defconst EIGHTY-PERCENT-POP 80)
(defconst EIGHTY-FIVE-PERCENT-POP 85)
(defconst NINTY-PERCENT-POP 90)
(defconst NINTY-FIVE-PERCENT-POP 95)
(defconst HUNDRED-PERCENT-POP 100)

#end-if		;if POP-CAP 100



;CONSTANTS THAT ARE LOADED WHEN WE'RE PLAYING ON POP-CAP 125
;-----------------------------------------------------------------------------------------------------------



#load-if-defined POPULATION-CAP-125

(defconst MIN-EAGLE-WARRIORS-TO-START-RUSH 16)
(defconst IMPERIAL-AGE-VILLAGER 69)
(defconst IMPERIAL-AGE-VILLAGER-COMMAND 80)

(defconst NUM-TRADE-CARTS-LATE-GAME 6)
(defconst TRADE-REPLACES-VILLAGER 63)

#load-if-defined DIFFICULTY-EASIEST
(defconst POPULATION-MAX 42)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst POPULATION-MAX 51)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst POPULATION-MAX 61)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst POPULATION-MAX 69)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst POPULATION-MAX 69)
#end-if

#load-if-not-defined GOTHIC-CIV

#load-if-defined DIFFICULTY-EASIEST
(defconst MILITARY-POPULATION-MAX 20)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst MILITARY-POPULATION-MAX 25)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst MILITARY-POPULATION-MAX 64)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst MILITARY-POPULATION-MAX 56)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst MILITARY-POPULATION-MAX 56)
#end-if

#else		;if civ != gothic

#load-if-defined DIFFICULTY-EASIEST
(defconst MILITARY-POPULATION-MAX 20)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst MILITARY-POPULATION-MAX 25)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst MILITARY-POPULATION-MAX 74)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst MILITARY-POPULATION-MAX 66)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst MILITARY-POPULATION-MAX 66)
#end-if

#end-if		;if civ == gothic

(defconst ZERO-PERCENT-POP 0)
(defconst ONE-PERCENT-POP 1)
(defconst NEGATIVE-ONE-PERCENT-POP -1)
(defconst TWO-PERCENT-POP 2)
(defconst NEGATIVE-TWO-PERCENT-POP -2)
(defconst THREE-PERCENT-POP 3)
(defconst FOUR-PERCENT-POP 5)
(defconst FIVE-PERCENT-POP 6)
(defconst SIX-PERCENT-POP 7)
(defconst SEVEN-PERCENT-POP 8)
(defconst EIGHT-PERCENT-POP 10)
(defconst NINE-PERCENT-POP 11)
(defconst TEN-PERCENT-POP 12)
(defconst ELEVEN-PERCENT-POP 13)
(defconst TWELVE-PERCENT-POP 13)
(defconst THIRTEEN-PERCENT-POP 16)
(defconst FOURTEEN-PERCENT-POP 17)
(defconst FIFTEEN-PERCENT-POP 18)
(defconst SIXTEEN-PERCENT-POP 20)
(defconst SEVENTEEN-PERCENT-POP 21)
(defconst EIGHTTEEN-PERCENT-POP 22)
(defconst NINETEEN-PERCENT-POP 23)
(defconst TWENTY-PERCENT-POP 25)
(defconst TWENTY-ONE-PERCENT-POP 26)
(defconst TWENTY-TWO-PERCENT-POP 27)
(defconst TWENTY-THREE-PERCENT-POP 28)
(defconst TWENTY-FOUR-PERCENT-POP 30)
(defconst TWENTY-FIVE-PERCENT-POP 31)
(defconst TWENTY-SIX-PERCENT-POP 32)
(defconst TWENTY-SEVEN-PERCENT-POP 33)
(defconst TWENTY-EIGHT-PERCENT-POP 35)
(defconst TWENTY-NINE-PERCENT-POP 36)
(defconst THIRTY-PERCENT-POP 37)
(defconst THIRTY-FIVE-PERCENT-POP 43)
(defconst FOURTY-PERCENT-POP 50)
(defconst FOURTY-FIVE-PERCENT-POP 56)
(defconst FIFTY-PERCENT-POP 62)
(defconst FIFTY-FIVE-PERCENT-POP 68)
(defconst SIXTY-PERCENT-POP 75)
(defconst SIXTY-FIVE-PERCENT-POP 81)
(defconst SEVENTY-PERCENT-POP 87)
(defconst SEVENTY-FIVE-PERCENT-POP 93)
(defconst EIGHTY-PERCENT-POP 100)
(defconst EIGHTY-FIVE-PERCENT-POP 106)
(defconst NINTY-PERCENT-POP 112)
(defconst NINTY-FIVE-PERCENT-POP 118)
(defconst HUNDRED-PERCENT-POP 125)

#end-if		;if POP-CAP 125



;CONSTANTS THAT ARE LOADED WHEN WE'RE PLAYING ON POP-CAP 150
;-----------------------------------------------------------------------------------------------------------



#load-if-defined POPULATION-CAP-150

(defconst MIN-EAGLE-WARRIORS-TO-START-RUSH 16)
(defconst IMPERIAL-AGE-VILLAGER 81)
(defconst IMPERIAL-AGE-VILLAGER-COMMAND 90)

(defconst NUM-TRADE-CARTS-LATE-GAME 7)
(defconst TRADE-REPLACES-VILLAGER 74)

#load-if-defined DIFFICULTY-EASIEST
(defconst POPULATION-MAX 54)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst POPULATION-MAX 62)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst POPULATION-MAX 72)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst POPULATION-MAX 76)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst POPULATION-MAX 76)
#end-if

#load-if-not-defined GOTHIC-CIV

#load-if-defined DIFFICULTY-EASIEST
(defconst MILITARY-POPULATION-MAX 20)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst MILITARY-POPULATION-MAX 25)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst MILITARY-POPULATION-MAX 78)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst MILITARY-POPULATION-MAX 74)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst MILITARY-POPULATION-MAX 74)
#end-if

#else		;if civ != gothic

#load-if-defined DIFFICULTY-EASIEST
(defconst MILITARY-POPULATION-MAX 20)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst MILITARY-POPULATION-MAX 25)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst MILITARY-POPULATION-MAX 88)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst MILITARY-POPULATION-MAX 84)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst MILITARY-POPULATION-MAX 84)
#end-if

#end-if		;if civ == gothic


(defconst ZERO-PERCENT-POP 0)
(defconst ONE-PERCENT-POP 1)
(defconst NEGATIVE-ONE-PERCENT-POP -1)
(defconst TWO-PERCENT-POP 3)
(defconst NEGATIVE-TWO-PERCENT-POP -3)
(defconst THREE-PERCENT-POP 4)
(defconst FOUR-PERCENT-POP 6)
(defconst FIVE-PERCENT-POP 7)
(defconst SIX-PERCENT-POP 9)
(defconst SEVEN-PERCENT-POP 10)
(defconst EIGHT-PERCENT-POP 12)
(defconst NINE-PERCENT-POP 13)
(defconst TEN-PERCENT-POP 15)
(defconst ELEVEN-PERCENT-POP 16)
(defconst TWELVE-PERCENT-POP 18)
(defconst THIRTEEN-PERCENT-POP 19)
(defconst FOURTEEN-PERCENT-POP 21)
(defconst FIFTEEN-PERCENT-POP 22)
(defconst SIXTEEN-PERCENT-POP 24)
(defconst SEVENTEEN-PERCENT-POP 25)
(defconst EIGHTTEEN-PERCENT-POP 27)
(defconst NINETEEN-PERCENT-POP 27)
(defconst TWENTY-PERCENT-POP 30)
(defconst TWENTY-ONE-PERCENT-POP 31)
(defconst TWENTY-TWO-PERCENT-POP 33)
(defconst TWENTY-THREE-PERCENT-POP 34)
(defconst TWENTY-FOUR-PERCENT-POP 36)
(defconst TWENTY-FIVE-PERCENT-POP 37)
(defconst TWENTY-SIX-PERCENT-POP 39)
(defconst TWENTY-SEVEN-PERCENT-POP 40)
(defconst TWENTY-EIGHT-PERCENT-POP 42)
(defconst TWENTY-NINE-PERCENT-POP 43)
(defconst THIRTY-PERCENT-POP 45)
(defconst THIRTY-FIVE-PERCENT-POP 52)
(defconst FOURTY-PERCENT-POP 60)
(defconst FOURTY-FIVE-PERCENT-POP 67)
(defconst FIFTY-PERCENT-POP 75)
(defconst FIFTY-FIVE-PERCENT-POP 82)
(defconst SIXTY-PERCENT-POP 90)
(defconst SIXTY-FIVE-PERCENT-POP 97)
(defconst SEVENTY-PERCENT-POP 105)
(defconst SEVENTY-FIVE-PERCENT-POP 112)
(defconst EIGHTY-PERCENT-POP 120)
(defconst EIGHTY-FIVE-PERCENT-POP 127)
(defconst NINTY-PERCENT-POP 135)
(defconst NINTY-FIVE-PERCENT-POP 142)
(defconst HUNDRED-PERCENT-POP 150)

#end-if		;if POP-CAP 150



;CONSTANTS THAT ARE LOADED WHEN WE'RE PLAYING ON POP-CAP 175
;-----------------------------------------------------------------------------------------------------------



#load-if-defined POPULATION-CAP-175

(defconst MIN-EAGLE-WARRIORS-TO-START-RUSH 16)
(defconst IMPERIAL-AGE-VILLAGER 80)
(defconst IMPERIAL-AGE-VILLAGER-COMMAND 100)

(defconst NUM-TRADE-CARTS-LATE-GAME 15)
(defconst TRADE-REPLACES-VILLAGER 65)

#load-if-defined DIFFICULTY-EASIEST
(defconst POPULATION-MAX 60)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst POPULATION-MAX 66)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst POPULATION-MAX 76)
#end-if

#load-if-not-defined DEATH-MATCH

#load-if-defined DIFFICULTY-HARD
(defconst POPULATION-MAX 80)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst POPULATION-MAX 80)
#end-if

#else

#load-if-defined DIFFICULTY-HARD
(defconst POPULATION-MAX 90)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst POPULATION-MAX 90)
#end-if

#end-if

#load-if-not-defined GOTHIC-CIV

#load-if-defined DIFFICULTY-EASIEST
(defconst MILITARY-POPULATION-MAX 20)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst MILITARY-POPULATION-MAX 25)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst MILITARY-POPULATION-MAX 99)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst MILITARY-POPULATION-MAX 95)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst MILITARY-POPULATION-MAX 95)
#end-if

#else		;if civ != gothic

#load-if-defined DIFFICULTY-EASIEST
(defconst MILITARY-POPULATION-MAX 20)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst MILITARY-POPULATION-MAX 25)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst MILITARY-POPULATION-MAX 109)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst MILITARY-POPULATION-MAX 105)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst MILITARY-POPULATION-MAX 105)
#end-if

#end-if		;if civ == gothic

(defconst ZERO-PERCENT-POP 0)
(defconst ONE-PERCENT-POP 1)
(defconst NEGATIVE-ONE-PERCENT-POP -1)
(defconst TWO-PERCENT-POP 3)
(defconst NEGATIVE-TWO-PERCENT-POP -3)
(defconst THREE-PERCENT-POP 5)
(defconst FOUR-PERCENT-POP 7)
(defconst FIVE-PERCENT-POP 8)
(defconst SIX-PERCENT-POP 10)
(defconst SEVEN-PERCENT-POP 12)
(defconst EIGHT-PERCENT-POP 14)
(defconst NINE-PERCENT-POP 15)
(defconst TEN-PERCENT-POP 17)
(defconst ELEVEN-PERCENT-POP 19)
(defconst TWELVE-PERCENT-POP 21)
(defconst THIRTEEN-PERCENT-POP 22)
(defconst FOURTEEN-PERCENT-POP 24)
(defconst FIFTEEN-PERCENT-POP 26)
(defconst SIXTEEN-PERCENT-POP 28)
(defconst SEVENTEEN-PERCENT-POP 29)
(defconst EIGHTTEEN-PERCENT-POP 29)
(defconst NINETEEN-PERCENT-POP 31)
(defconst TWENTY-PERCENT-POP 33)
(defconst TWENTY-ONE-PERCENT-POP 35)
(defconst TWENTY-TWO-PERCENT-POP 36)
(defconst TWENTY-THREE-PERCENT-POP 40)
(defconst TWENTY-FOUR-PERCENT-POP 42)
(defconst TWENTY-FIVE-PERCENT-POP 43)
(defconst TWENTY-SIX-PERCENT-POP 45)
(defconst TWENTY-SEVEN-PERCENT-POP 47)
(defconst TWENTY-EIGHT-PERCENT-POP 49)
(defconst TWENTY-NINE-PERCENT-POP 50)
(defconst THIRTY-PERCENT-POP 52)
(defconst THIRTY-FIVE-PERCENT-POP 61)
(defconst FOURTY-PERCENT-POP 70)
(defconst FOURTY-FIVE-PERCENT-POP 78)
(defconst FIFTY-PERCENT-POP 87)
(defconst FIFTY-FIVE-PERCENT-POP 96)
(defconst SIXTY-PERCENT-POP 105)
(defconst SIXTY-FIVE-PERCENT-POP 113)
(defconst SEVENTY-PERCENT-POP 122)
(defconst SEVENTY-FIVE-PERCENT-POP 131)
(defconst EIGHTY-PERCENT-POP 140)
(defconst EIGHTY-FIVE-PERCENT-POP 148)
(defconst NINTY-PERCENT-POP 157)
(defconst NINTY-FIVE-PERCENT-POP 166)
(defconst HUNDRED-PERCENT-POP 175)

#end-if		;if POP-CAP 175



;CONSTANTS THAT ARE LOADED WHEN WE'RE PLAYING ON POP-CAP 200
;-----------------------------------------------------------------------------------------------------------



#load-if-defined POPULATION-CAP-200

(defconst MIN-EAGLE-WARRIORS-TO-START-RUSH 16)
(defconst IMPERIAL-AGE-VILLAGER 90)
(defconst IMPERIAL-AGE-VILLAGER-COMMAND 110)

(defconst NUM-TRADE-CARTS-LATE-GAME 15)
(defconst TRADE-REPLACES-VILLAGER 75)

#load-if-defined DIFFICULTY-EASIEST
(defconst POPULATION-MAX 65)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst POPULATION-MAX 74)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst POPULATION-MAX 82)
#end-if

#load-if-not-defined DEATH-MATCH

#load-if-defined DIFFICULTY-HARD
(defconst POPULATION-MAX 90)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst POPULATION-MAX 90)
#end-if

#else

#load-if-defined DIFFICULTY-HARD
(defconst POPULATION-MAX 100)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst POPULATION-MAX 100)
#end-if

#end-if

#load-if-not-defined GOTHIC-CIV

#load-if-defined DIFFICULTY-EASIEST
(defconst MILITARY-POPULATION-MAX 20)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst MILITARY-POPULATION-MAX 45)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst MILITARY-POPULATION-MAX 118)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst MILITARY-POPULATION-MAX 110)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst MILITARY-POPULATION-MAX 110)
#end-if

#else		;if civ != gothic

#load-if-defined DIFFICULTY-EASIEST
(defconst MILITARY-POPULATION-MAX 20)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst MILITARY-POPULATION-MAX 25)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst MILITARY-POPULATION-MAX 128)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst MILITARY-POPULATION-MAX 120)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst MILITARY-POPULATION-MAX 120)
#end-if

#end-if		;if civ == gothic


(defconst ZERO-PERCENT-POP 0)
(defconst ONE-PERCENT-POP 2)
(defconst NEGATIVE-ONE-PERCENT-POP -2)
(defconst TWO-PERCENT-POP 4)
(defconst NEGATIVE-TWO-PERCENT-POP -4)
(defconst THREE-PERCENT-POP 6)
(defconst FOUR-PERCENT-POP 8)
(defconst FIVE-PERCENT-POP 10)
(defconst SIX-PERCENT-POP 12)
(defconst SEVEN-PERCENT-POP 14)
(defconst EIGHT-PERCENT-POP 16)
(defconst NINE-PERCENT-POP 18)
(defconst TEN-PERCENT-POP 20)
(defconst ELEVEN-PERCENT-POP 22)
(defconst TWELVE-PERCENT-POP 24)
(defconst THIRTEEN-PERCENT-POP 26)
(defconst FOURTEEN-PERCENT-POP 28)
(defconst FIFTEEN-PERCENT-POP 30)
(defconst SIXTEEN-PERCENT-POP 32)
(defconst SEVENTEEN-PERCENT-POP 34)
(defconst EIGHTTEEN-PERCENT-POP 36)
(defconst NINETEEN-PERCENT-POP 38)
(defconst TWENTY-PERCENT-POP 40)
(defconst TWENTY-ONE-PERCENT-POP 42)
(defconst TWENTY-TWO-PERCENT-POP 44)
(defconst TWENTY-THREE-PERCENT-POP 46)
(defconst TWENTY-FOUR-PERCENT-POP 48)
(defconst TWENTY-FIVE-PERCENT-POP 50)
(defconst TWENTY-SIX-PERCENT-POP 52)
(defconst TWENTY-SEVEN-PERCENT-POP 54)
(defconst TWENTY-EIGHT-PERCENT-POP 56)
(defconst TWENTY-NINE-PERCENT-POP 58)
(defconst THIRTY-PERCENT-POP 60)
(defconst THIRTY-FIVE-PERCENT-POP 70)
(defconst FOURTY-PERCENT-POP 80)
(defconst FOURTY-FIVE-PERCENT-POP 90)
(defconst FIFTY-PERCENT-POP 100)
(defconst FIFTY-FIVE-PERCENT-POP 110)
(defconst SIXTY-PERCENT-POP 120)
(defconst SIXTY-FIVE-PERCENT-POP 130)
(defconst SEVENTY-PERCENT-POP 140)
(defconst SEVENTY-FIVE-PERCENT-POP 150)
(defconst EIGHTY-PERCENT-POP 160)
(defconst EIGHTY-FIVE-PERCENT-POP 170)
(defconst NINTY-PERCENT-POP 180)

(defconst HUNDRED-PERCENT-POP 200)

#end-if		;if POP-CAP 200



;CONSTANTS THAT ARE LOADED WHEN WE'RE PLAYING ON POP-CAP 300
;-----------------------------------------------------------------------------------------------------------



#load-if-defined POPULATION-CAP-300

(defconst MIN-EAGLE-WARRIORS-TO-START-RUSH 16)
(defconst IMPERIAL-AGE-VILLAGER 135)
(defconst IMPERIAL-AGE-VILLAGER-COMMAND 145)

(defconst NUM-TRADE-CARTS-LATE-GAME 23)
(defconst TRADE-REPLACES-VILLAGER 95)

#load-if-defined DIFFICULTY-EASIEST
(defconst POPULATION-MAX 95)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst POPULATION-MAX 110)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst POPULATION-MAX 124)
#end-if

#load-if-not-defined DEATH-MATCH

#load-if-defined DIFFICULTY-HARD
(defconst POPULATION-MAX 135)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst POPULATION-MAX 135)
#end-if

#else

#load-if-defined DIFFICULTY-HARD
(defconst POPULATION-MAX 200)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst POPULATION-MAX 200)
#end-if

#end-if

#load-if-not-defined GOTHIC-CIV

#load-if-defined DIFFICULTY-EASIEST
(defconst MILITARY-POPULATION-MAX 30)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst MILITARY-POPULATION-MAX 67)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst MILITARY-POPULATION-MAX 170)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst MILITARY-POPULATION-MAX 165)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst MILITARY-POPULATION-MAX 165)
#end-if

#else		;if civ != gothic

#load-if-defined DIFFICULTY-EASIEST
(defconst MILITARY-POPULATION-MAX 30)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst MILITARY-POPULATION-MAX 34)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst MILITARY-POPULATION-MAX 192)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst MILITARY-POPULATION-MAX 180)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst MILITARY-POPULATION-MAX 180)
#end-if

#end-if		;if civ == gothic


(defconst ZERO-PERCENT-POP 0)
(defconst ONE-PERCENT-POP 3)
(defconst NEGATIVE-ONE-PERCENT-POP -3)
(defconst TWO-PERCENT-POP 6)
(defconst NEGATIVE-TWO-PERCENT-POP -6)
(defconst THREE-PERCENT-POP 9)
(defconst FOUR-PERCENT-POP 12)
(defconst FIVE-PERCENT-POP 15)
(defconst SIX-PERCENT-POP 18)
(defconst SEVEN-PERCENT-POP 21)
(defconst EIGHT-PERCENT-POP 24)
(defconst NINE-PERCENT-POP 27)
(defconst TEN-PERCENT-POP 30)
(defconst ELEVEN-PERCENT-POP 33)
(defconst TWELVE-PERCENT-POP 36)
(defconst THIRTEEN-PERCENT-POP 39)
(defconst FOURTEEN-PERCENT-POP 42)
(defconst FIFTEEN-PERCENT-POP 45)
(defconst SIXTEEN-PERCENT-POP 48)
(defconst SEVENTEEN-PERCENT-POP 51)
(defconst EIGHTTEEN-PERCENT-POP 54)
(defconst NINETEEN-PERCENT-POP 57)
(defconst TWENTY-PERCENT-POP 60)
(defconst TWENTY-ONE-PERCENT-POP 63)
(defconst TWENTY-TWO-PERCENT-POP 66)
(defconst TWENTY-THREE-PERCENT-POP 69)
(defconst TWENTY-FOUR-PERCENT-POP 72)
(defconst TWENTY-FIVE-PERCENT-POP 75)
(defconst TWENTY-SIX-PERCENT-POP 78)
(defconst TWENTY-SEVEN-PERCENT-POP 81)
(defconst TWENTY-EIGHT-PERCENT-POP 84)
(defconst TWENTY-NINE-PERCENT-POP 87)
(defconst THIRTY-PERCENT-POP 90)
(defconst THIRTY-FIVE-PERCENT-POP 105)
(defconst FOURTY-PERCENT-POP 120)
(defconst FOURTY-FIVE-PERCENT-POP 135)
(defconst FIFTY-PERCENT-POP 150)
(defconst FIFTY-FIVE-PERCENT-POP 165)
(defconst SIXTY-PERCENT-POP 180)
(defconst SIXTY-FIVE-PERCENT-POP 195)
(defconst SEVENTY-PERCENT-POP 210)
(defconst SEVENTY-FIVE-PERCENT-POP 225)
(defconst EIGHTY-PERCENT-POP 240)
(defconst EIGHTY-FIVE-PERCENT-POP 255)
(defconst NINTY-PERCENT-POP 270)

(defconst HUNDRED-PERCENT-POP 300)

#end-if		;if POP-CAP 300


;CONSTANTS THAT ARE LOADED WHEN WE'RE PLAYING ON POP-CAP 400
;-----------------------------------------------------------------------------------------------------------



#load-if-defined POPULATION-CAP-400

(defconst MIN-EAGLE-WARRIORS-TO-START-RUSH 16)
(defconst IMPERIAL-AGE-VILLAGER 160)
(defconst IMPERIAL-AGE-VILLAGER-COMMAND 220)

(defconst NUM-TRADE-CARTS-LATE-GAME 40)
(defconst TRADE-REPLACES-VILLAGER 120)

#load-if-defined DIFFICULTY-EASIEST
(defconst POPULATION-MAX 130)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst POPULATION-MAX 148)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst POPULATION-MAX 164)
#end-if

#load-if-not-defined DEATH-MATCH

#load-if-defined DIFFICULTY-HARD
(defconst POPULATION-MAX 160)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst POPULATION-MAX 160)
#end-if

#else

#load-if-defined DIFFICULTY-HARD
(defconst POPULATION-MAX 180)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst POPULATION-MAX 180)
#end-if

#end-if

#load-if-not-defined GOTHIC-CIV

#load-if-defined DIFFICULTY-EASIEST
(defconst MILITARY-POPULATION-MAX 40)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst MILITARY-POPULATION-MAX 90)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst MILITARY-POPULATION-MAX 236)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst MILITARY-POPULATION-MAX 220)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst MILITARY-POPULATION-MAX 220)
#end-if

#else		;if civ != gothic

#load-if-defined DIFFICULTY-EASIEST
(defconst MILITARY-POPULATION-MAX 40)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst MILITARY-POPULATION-MAX 50)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst MILITARY-POPULATION-MAX 256)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst MILITARY-POPULATION-MAX 240)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst MILITARY-POPULATION-MAX 240)
#end-if

#end-if		;if civ == gothic


(defconst ZERO-PERCENT-POP 0)
(defconst ONE-PERCENT-POP 4)
(defconst NEGATIVE-ONE-PERCENT-POP -4)
(defconst TWO-PERCENT-POP 8)
(defconst NEGATIVE-TWO-PERCENT-POP -8)
(defconst THREE-PERCENT-POP 12)
(defconst FOUR-PERCENT-POP 16)
(defconst FIVE-PERCENT-POP 20)
(defconst SIX-PERCENT-POP 24)
(defconst SEVEN-PERCENT-POP 28)
(defconst EIGHT-PERCENT-POP 32)
(defconst NINE-PERCENT-POP 36)
(defconst TEN-PERCENT-POP 40)
(defconst ELEVEN-PERCENT-POP 44)
(defconst TWELVE-PERCENT-POP 48)
(defconst THIRTEEN-PERCENT-POP 52)
(defconst FOURTEEN-PERCENT-POP 56)
(defconst FIFTEEN-PERCENT-POP 60)
(defconst SIXTEEN-PERCENT-POP 64)
(defconst SEVENTEEN-PERCENT-POP 68)
(defconst EIGHTTEEN-PERCENT-POP 72)
(defconst NINETEEN-PERCENT-POP 76)
(defconst TWENTY-PERCENT-POP 80)
(defconst TWENTY-ONE-PERCENT-POP 84)
(defconst TWENTY-TWO-PERCENT-POP 88)
(defconst TWENTY-THREE-PERCENT-POP 92)
(defconst TWENTY-FOUR-PERCENT-POP 96)
(defconst TWENTY-FIVE-PERCENT-POP 100)
(defconst TWENTY-SIX-PERCENT-POP 104)
(defconst TWENTY-SEVEN-PERCENT-POP 108)
(defconst TWENTY-EIGHT-PERCENT-POP 112)
(defconst TWENTY-NINE-PERCENT-POP 116)
(defconst THIRTY-PERCENT-POP 120)
(defconst THIRTY-FIVE-PERCENT-POP 140)
(defconst FOURTY-PERCENT-POP 160)
(defconst FOURTY-FIVE-PERCENT-POP 180)
(defconst FIFTY-PERCENT-POP 200)
(defconst FIFTY-FIVE-PERCENT-POP 220)
(defconst SIXTY-PERCENT-POP 240)
(defconst SIXTY-FIVE-PERCENT-POP 260)
(defconst SEVENTY-PERCENT-POP 280)
(defconst SEVENTY-FIVE-PERCENT-POP 300)
(defconst EIGHTY-PERCENT-POP 320)
(defconst EIGHTY-FIVE-PERCENT-POP 340)
(defconst NINTY-PERCENT-POP 360)

(defconst HUNDRED-PERCENT-POP 400)

#end-if		;if POP-CAP 400

;CONSTANTS THAT ARE LOADED WHEN WE'RE PLAYING ON POP-CAP 500
;-----------------------------------------------------------



#load-if-defined POPULATION-CAP-500

(defconst MIN-EAGLE-WARRIORS-TO-START-RUSH 12)
(defconst IMPERIAL-AGE-VILLAGER 220)
(defconst IMPERIAL-AGE-VILLAGER-COMMAND 260)

(defconst NUM-TRADE-CARTS-LATE-GAME 60)
(defconst TRADE-REPLACES-VILLAGER 160)

#load-if-defined DIFFICULTY-EASIEST
(defconst POPULATION-MAX 125)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst POPULATION-MAX 175)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst POPULATION-MAX 235)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst POPULATION-MAX 270)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst POPULATION-MAX 270)
#end-if

#load-if-not-defined GOTHIC-CIV

#load-if-defined DIFFICULTY-EASIEST
(defconst MILITARY-POPULATION-MAX 100)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst MILITARY-POPULATION-MAX 125)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst MILITARY-POPULATION-MAX 165)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst MILITARY-POPULATION-MAX 230)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst MILITARY-POPULATION-MAX 230)
#end-if

#else		;if civ != gothic

#load-if-defined DIFFICULTY-EASIEST
(defconst MILITARY-POPULATION-MAX 100)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst MILITARY-POPULATION-MAX 125)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst MILITARY-POPULATION-MAX 315)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst MILITARY-POPULATION-MAX 280)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst MILITARY-POPULATION-MAX 280)
#end-if

#end-if		;if civ == gothic



(defconst ZERO-PERCENT-POP 0)
(defconst ONE-PERCENT-POP 5)
(defconst NEGATIVE-ONE-PERCENT-POP -5)
(defconst TWO-PERCENT-POP 10)
(defconst NEGATIVE-TWO-PERCENT-POP -10)
(defconst THREE-PERCENT-POP 15)
(defconst FOUR-PERCENT-POP 20)
(defconst FIVE-PERCENT-POP 25)
(defconst SIX-PERCENT-POP 30)
(defconst SEVEN-PERCENT-POP 35)
(defconst EIGHT-PERCENT-POP 40)
(defconst NINE-PERCENT-POP 45)
(defconst TEN-PERCENT-POP 50)
(defconst ELEVEN-PERCENT-POP 55)
(defconst TWELVE-PERCENT-POP 60)
(defconst THIRTEEN-PERCENT-POP 65)
(defconst FOURTEEN-PERCENT-POP 70)
(defconst FIFTEEN-PERCENT-POP 75)
(defconst SIXTEEN-PERCENT-POP 80)
(defconst SEVENTEEN-PERCENT-POP 85)
(defconst EIGHTTEEN-PERCENT-POP 90)
(defconst NINETEEN-PERCENT-POP 95)
(defconst TWENTY-PERCENT-POP 100)
(defconst TWENTY-ONE-PERCENT-POP 105)
(defconst TWENTY-TWO-PERCENT-POP 110)
(defconst TWENTY-THREE-PERCENT-POP 115)
(defconst TWENTY-FOUR-PERCENT-POP 120)
(defconst TWENTY-FIVE-PERCENT-POP 125)
(defconst TWENTY-SIX-PERCENT-POP 130)
(defconst TWENTY-SEVEN-PERCENT-POP 135)
(defconst TWENTY-EIGHT-PERCENT-POP 140)
(defconst TWENTY-NINE-PERCENT-POP 145)
(defconst THIRTY-PERCENT-POP 150)
(defconst THIRTY-FIVE-PERCENT-POP 165)
(defconst FOURTY-PERCENT-POP 200)
(defconst FOURTY-FIVE-PERCENT-POP 225)
(defconst FIFTY-PERCENT-POP 250)
(defconst FIFTY-FIVE-PERCENT-POP 275)
(defconst SIXTY-PERCENT-POP 300)
(defconst SIXTY-FIVE-PERCENT-POP 325)
(defconst SEVENTY-PERCENT-POP 350)
(defconst SEVENTY-FIVE-PERCENT-POP 375)
(defconst EIGHTY-PERCENT-POP 400)
(defconst EIGHTY-FIVE-PERCENT-POP 425)
(defconst NINTY-PERCENT-POP 450)
(defconst NINTY-FIVE-PERCENT-POP 475)
(defconst HUNDRED-PERCENT-POP 500)

#end-if		;if POP-CAP 500


;DIFFICULTY-TYPE-LOAD
;------------------------------------



;CONSTANTS THAT ARE LOADED WHEN WE'RE PLAYING ON EASIEST
;-----------------------------------------------------------------------------------------------------



#load-if-defined DIFFICULTY-EASIEST

(defconst EAGLE-WARRIOR-RUSH-NUMBER-OF-BARRACKS 1)
(defconst TIME-BETWEEN-VILLAGER-TRAINING 160)
(defconst TIME-BETWEEN-ATTACK-ATTEMPTS-ATTACKER 1800)
(defconst TIME-BETWEEN-ATTACK-ATTEMPTS-DEFENDER 2100)
(defconst GAME-TIME-UNTIL-FIRST-ATTACK-WHEN-DEFENDER-PERSONALITY 2700)
(defconst GAME-TIME-UNTIL-FIRST-ATTACK-WHEN-ATTACKER-PERSONALITY 2100)

(defconst barracks-building-feudal 2)
(defconst archery-range-building-feudal 0)
(defconst stable-building-feudal 0)
(defconst watch-tower-building-feudal 0)

(defconst barracks-building-castle 1)
(defconst archery-range-building-castle 1)
(defconst stable-building-castle 1)
(defconst siege-workshop-building-castle 1)
(defconst watch-tower-building-castle 1)
(defconst castle-building-castle 0)

(defconst barracks-building-imperial 1)
(defconst archery-range-building-imperial 1)
(defconst stable-building-imperial 1)
(defconst siege-workshop-building-imperial 1)
(defconst watch-tower-building-imperial 1)
(defconst castle-building-imperial 0)

(defconst idle-unit-limit 60)
(defconst initial-exploration-required 2)
(defconst peace-like-level 1)
(defconst coop-share-attacking 0)
(defconst coop-share-attacking-interval 0)
(defconst number-attack-groups 1)
(defconst group-leader-defense-distance 3)

(defconst attack-separation-time-randomness 60)
(defconst attack-intelligence 0)
(defconst initial-attack-delay-type 3)
(defconst initial-attack-delay 18000)
(defconst number-defend-groups 2)
(defconst camp-distance-very-far 50)
(defconst relic-return-distance 2)
(defconst scaling-frequency 5)
(defconst build-frequency 1)
(defconst save-scenario-information 0)
(defconst track-player-history 0)
(defconst attack-winning-player 1)
(defconst coop-share-information 0)
(defconst attack-winning-player-factor 100)
(defconst maintain-distance 99)
(defconst dodge-missiles 99)
(defconst percent-enemy-sighted-response 10)

#load-if-not-defined WONDER-RACE
(defconst town-center-building-castle 3)
(defconst town-center-building-imperial 3)
#else
(defconst town-center-building-castle 1)
(defconst town-center-building-imperial 1)
#end-if

(defconst GET-NEW-FRIEND-RESOURCES 100)

#end-if		;if EASIEST



;CONSTANTS THAT ARE LOADED WHEN WE'RE PLAYING ON EASY
;-------------------------------------------------------------------------------------------------



#load-if-defined DIFFICULTY-EASY

(defconst EAGLE-WARRIOR-RUSH-NUMBER-OF-BARRACKS 2)
(defconst TIME-BETWEEN-VILLAGER-TRAINING 110)
(defconst TIME-BETWEEN-ATTACK-ATTEMPTS-ATTACKER 1200)
(defconst TIME-BETWEEN-ATTACK-ATTEMPTS-DEFENDER 1800)
(defconst GAME-TIME-UNTIL-FIRST-ATTACK-WHEN-DEFENDER-PERSONALITY 2100)
(defconst GAME-TIME-UNTIL-FIRST-ATTACK-WHEN-ATTACKER-PERSONALITY 1800)

(defconst barracks-building-feudal 2)
(defconst archery-range-building-feudal 1)
(defconst stable-building-feudal 1)
(defconst watch-tower-building-feudal 2)

(defconst barracks-building-castle 1)
(defconst archery-range-building-castle 1)
(defconst stable-building-castle 1)
(defconst siege-workshop-building-castle 1)
(defconst watch-tower-building-castle 3)
(defconst castle-building-castle 0)

(defconst barracks-building-imperial 2)
(defconst archery-range-building-imperial 2)
(defconst stable-building-imperial 2)
(defconst siege-workshop-building-imperial 1)
(defconst watch-tower-building-imperial 3)
(defconst castle-building-imperial 1)

(defconst idle-unit-limit 40)
(defconst initial-exploration-required 2)
(defconst peace-like-level 5)
(defconst coop-share-attacking 0)
(defconst coop-share-attacking-interval 0)
(defconst number-attack-groups 1)
(defconst group-leader-defense-distance 4)

(defconst attack-separation-time-randomness 80)
(defconst attack-intelligence 0)
(defconst initial-attack-delay-type 3)
(defconst initial-attack-delay 18000)
(defconst camp-distance-very-far 50)
(defconst relic-return-distance 5)
(defconst scaling-frequency 4)
(defconst build-frequency 1)
(defconst save-scenario-information 0)
(defconst track-player-history 0)
(defconst attack-winning-player 1)
(defconst coop-share-information 1)
(defconst attack-winning-player-factor 80)
(defconst maintain-distance 66)
(defconst dodge-missiles 66)
(defconst percent-enemy-sighted-response 25)

#load-if-not-defined WONDER-RACE
(defconst town-center-building-castle 3)
(defconst town-center-building-imperial 4)
#else
(defconst town-center-building-castle 1)
(defconst town-center-building-imperial 1)
#end-if

(defconst GET-NEW-FRIEND-RESOURCES 200)

#end-if		;if EASY



;CONSTANTS THAT ARE LOADED WHEN WE'RE PLAYING ON MODERATE
;-----------------------------------------------------------------------------------------------------------



#load-if-defined DIFFICULTY-MODERATE

(defconst EAGLE-WARRIOR-RUSH-NUMBER-OF-BARRACKS 2)
(defconst TIME-BETWEEN-VILLAGER-TRAINING 65)
(defconst TIME-BETWEEN-ATTACK-ATTEMPTS-ATTACKER 900)
(defconst TIME-BETWEEN-ATTACK-ATTEMPTS-DEFENDER 1200)
(defconst GAME-TIME-UNTIL-FIRST-ATTACK-WHEN-DEFENDER-PERSONALITY 1800)
(defconst GAME-TIME-UNTIL-FIRST-ATTACK-WHEN-ATTACKER-PERSONALITY 1500)

(defconst barracks-building-feudal 3)
(defconst archery-range-building-feudal 3)
(defconst stable-building-feudal 3)
(defconst watch-tower-building-feudal 5)

(defconst barracks-building-castle 4)
(defconst archery-range-building-castle 4)
(defconst stable-building-castle 4)
(defconst siege-workshop-building-castle 2)
(defconst watch-tower-building-castle 8)
(defconst castle-building-castle 3)

(defconst barracks-building-imperial 5)
(defconst archery-range-building-imperial 5)
(defconst stable-building-imperial 5)
(defconst siege-workshop-building-imperial 4)
(defconst watch-tower-building-imperial 10)
(defconst castle-building-imperial 4)


(defconst idle-unit-limit 20)
(defconst initial-exploration-required 2)
(defconst peace-like-level 20)
(defconst coop-share-attacking 1)
(defconst coop-share-attacking-interval 5)
(defconst number-attack-groups 2)
(defconst group-leader-defense-distance 5)

(defconst attack-separation-time-randomness 100)
(defconst attack-intelligence 0)
(defconst initial-attack-delay-type 2)
(defconst initial-attack-delay 15000)
(defconst number-defend-groups 2)
(defconst camp-distance-very-far 50)
(defconst relic-return-distance 250)
(defconst scaling-frequency 2)
(defconst build-frequency 1)
(defconst save-scenario-information 0)
(defconst track-player-history 0)
(defconst attack-winning-player 1)
(defconst coop-share-information 1)
(defconst attack-winning-player-factor 1)
(defconst maintain-distance 60)
(defconst dodge-missiles 40)
(defconst percent-enemy-sighted-response 75)

#load-if-not-defined WONDER-RACE
(defconst town-center-building-castle 3)
(defconst town-center-building-imperial 5)
#else
(defconst town-center-building-castle 3)
(defconst town-center-building-imperial 3)
#end-if

(defconst GET-NEW-FRIEND-RESOURCES 800)

#end-if		;if MODERATE



;CONSTANTS THAT ARE LOADED WHEN WE'RE PLAYING ON HARD
;--------------------------------------------------------------------------------------------------



#load-if-defined DIFFICULTY-HARD

(defconst EAGLE-WARRIOR-RUSH-NUMBER-OF-BARRACKS 4)
(defconst TIME-BETWEEN-VILLAGER-TRAINING 0)
(defconst TIME-BETWEEN-ATTACK-ATTEMPTS-ATTACKER 300)
(defconst TIME-BETWEEN-ATTACK-ATTEMPTS-DEFENDER 600)
(defconst GAME-TIME-UNTIL-FIRST-ATTACK-WHEN-DEFENDER-PERSONALITY 1800)
(defconst GAME-TIME-UNTIL-FIRST-ATTACK-WHEN-ATTACKER-PERSONALITY 600)

(defconst barracks-building-feudal 4)
(defconst archery-range-building-feudal 4)
(defconst stable-building-feudal 4)
(defconst watch-tower-building-feudal 5)

(defconst barracks-building-castle 6)
(defconst archery-range-building-castle 6)
(defconst stable-building-castle 6)
(defconst siege-workshop-building-castle 2)
(defconst watch-tower-building-castle 8)
(defconst castle-building-castle 5)

(defconst barracks-building-imperial 15)
(defconst archery-range-building-imperial 15)
(defconst stable-building-imperial 15)
(defconst siege-workshop-building-imperial 4)
(defconst watch-tower-building-imperial 30)
(defconst castle-building-imperial 55)

(defconst idle-unit-limit 10)
(defconst initial-exploration-required 0)
(defconst peace-like-level 50)
(defconst coop-share-attacking 1)
(defconst coop-share-attacking-interval 10)
(defconst number-attack-groups 2)
(defconst group-leader-defense-distance 6)

(defconst attack-separation-time-randomness 120)
(defconst attack-intelligence 1)
(defconst initial-attack-delay-type 2)
(defconst initial-attack-delay 10000)
(defconst number-defend-groups 2)
(defconst camp-max-distance 80)
(defconst camp-distance-very-far 50)
(defconst relic-return-distance 480)
(defconst scaling-frequency 3)
(defconst build-frequency 1)
(defconst save-scenario-information 1)
(defconst track-player-history 1)
(defconst attack-winning-player 0)
(defconst coop-share-information 1)
(defconst attack-winning-player-factor 100)
(defconst maintain-distance 75)
(defconst dodge-missiles 50)
(defconst percent-enemy-sighted-response 99)

#load-if-not-defined WONDER-RACE
(defconst town-center-building-castle 4)
(defconst town-center-building-imperial 9)
#else
(defconst town-center-building-castle 3)
(defconst town-center-building-imperial 3)
#end-if

(defconst GET-NEW-FRIEND-RESOURCES 1500)

#end-if		;if HARD



;CONSTANTS THAT ARE LOADED WHEN WE'RE PLAYING ON HARDEST
;-------------------------------------------------------------------------------------------------------



#load-if-defined DIFFICULTY-HARDEST

(defconst EAGLE-WARRIOR-RUSH-NUMBER-OF-BARRACKS 5)
(defconst TIME-BETWEEN-VILLAGER-TRAINING 0)
(defconst TIME-BETWEEN-ATTACK-ATTEMPTS-ATTACKER 300)
(defconst TIME-BETWEEN-ATTACK-ATTEMPTS-DEFENDER 600)
(defconst GAME-TIME-UNTIL-FIRST-ATTACK-WHEN-DEFENDER-PERSONALITY 1800)
(defconst GAME-TIME-UNTIL-FIRST-ATTACK-WHEN-ATTACKER-PERSONALITY 300)

(defconst barracks-building-feudal 4)
(defconst archery-range-building-feudal 4)
(defconst stable-building-feudal 4)
(defconst watch-tower-building-feudal 5)

(defconst barracks-building-castle 6)
(defconst archery-range-building-castle 6)
(defconst stable-building-castle 6)
(defconst siege-workshop-building-castle 2)
(defconst watch-tower-building-castle 8)
(defconst castle-building-castle 5)

(defconst barracks-building-imperial 20)
(defconst archery-range-building-imperial 20)
(defconst stable-building-imperial 20)
(defconst siege-workshop-building-imperial 4)
(defconst watch-tower-building-imperial 30)
(defconst castle-building-imperial 55)

(defconst idle-unit-limit 5)
(defconst initial-exploration-required 0)
(defconst peace-like-level 70)
(defconst coop-share-attacking 1)
(defconst coop-share-attacking-interval 99)
(defconst number-attack-groups 2)
(defconst group-leader-defense-distance 7)

(defconst attack-separation-time-randomness 300)
(defconst attack-intelligence 1)
(defconst initial-attack-delay-type 2)
(defconst initial-attack-delay 10000)
(defconst camp-distance-very-far 50)
(defconst relic-return-distance 480)
(defconst scaling-frequency 3)
(defconst build-frequency 1)
(defconst save-scenario-information 1)
(defconst track-player-history 1)
(defconst attack-winning-player 0)
(defconst coop-share-information 100)
(defconst attack-winning-player-factor 1)
(defconst maintain-distance 75)
(defconst dodge-missiles 25)
(defconst percent-enemy-sighted-response 99)

#load-if-not-defined WONDER-RACE
(defconst town-center-building-castle 4)
(defconst town-center-building-imperial 9)
#else
(defconst town-center-building-castle 3)
(defconst town-center-building-imperial 3)
#end-if

(defconst GET-NEW-FRIEND-RESOURCES 1500)

#end-if		;if Hardest


#load-if-defined TINY-MAP
(defconst MARKET-NEG-DIST -50)
#end-if
#load-if-defined SMALL-MAP
(defconst MARKET-NEG-DIST -67)
#end-if
#load-if-defined MEDIUM-MAP
(defconst MARKET-NEG-DIST -80)
#end-if
#load-if-defined NORMAL-MAP
(defconst MARKET-NEG-DIST -92)
#end-if
#load-if-defined LARGE-MAP
(defconst MARKET-NEG-DIST -108)
#end-if
#load-if-defined GIANT-MAP
(defconst MARKET-NEG-DIST -118)
#end-if
#load-if-defined LUDIKRIS-MAP
(defconst MARKET-NEG-DIST -220)
#end-if

;ENEMY-SIGHTED-RESPONSE-DISTANCE
;----------------------------------------



#load-if-defined TINY-MAP

#load-if-defined DIFFICULTY-EASIEST
(defconst enemy-sighted-response-distance 10)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst enemy-sighted-response-distance 10)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst enemy-sighted-response-distance 15)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst enemy-sighted-response-distance 25)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst enemy-sighted-response-distance 25)
#end-if

#else		;if map == tiny

#load-if-defined DIFFICULTY-EASIEST
(defconst enemy-sighted-response-distance 10)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst enemy-sighted-response-distance 10)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst enemy-sighted-response-distance 20)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst enemy-sighted-response-distance 30)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst enemy-sighted-response-distance 30)
#end-if

#end-if		;if map != tiny



;MAP-SIZE-LOAD
;------------------------



#load-if-not-defined WONDER-RACE

(defconst min-dark-town-size 15)
(defconst max-dark-town-size 18)
(defconst min-feudal-town-size 14)
(defconst max-feudal-town-size 18)
(defconst min-castle-town-size 18)
(defconst max-castle-town-size 24)
(defconst min-imperial-town-size 24)
(defconst max-imperial-town-size 38)

#else

(defconst min-dark-town-size 12)
(defconst max-dark-town-size 15)
(defconst min-feudal-town-size 15)
(defconst max-feudal-town-size 17)
(defconst min-castle-town-size 15)
(defconst max-castle-town-size 17)
(defconst min-imperial-town-size 17)
(defconst max-imperial-town-size 18)

#end-if		;if game type == wonder race


(defconst MIN-FOOD-AMOUNT-DARK 500)
(defconst MIN-WOOD-AMOUNT-DARK 200)
(defconst MIN-GOLD-AMOUNT-DARK 300)
(defconst MIN-STONE-AMOUNT-DARK 400)
(defconst MIN-FOOD-AMOUNT-FEUDAL 800)
(defconst MIN-WOOD-AMOUNT-FEUDAL 400)
(defconst MIN-GOLD-AMOUNT-FEUDAL 200)
(defconst MIN-STONE-AMOUNT-FEUDAL 500)
(defconst MIN-FOOD-AMOUNT-CASTLE 1000)
(defconst MIN-WOOD-AMOUNT-CASTLE 600)
(defconst MIN-GOLD-AMOUNT-CASTLE 800)

#load-if-not-defined WONDER-RACE

(defconst MIN-STONE-AMOUNT-CASTLE 650)
(defconst MIN-FOOD-AMOUNT-IMPERIAL 400)
(defconst MIN-WOOD-AMOUNT-IMPERIAL 400)
(defconst MIN-GOLD-AMOUNT-IMPERIAL 400)
(defconst MIN-STONE-AMOUNT-IMPERIAL 400)

#else

(defconst MIN-STONE-AMOUNT-CASTLE 1000)
(defconst MIN-FOOD-AMOUNT-IMPERIAL 100)
(defconst MIN-WOOD-AMOUNT-IMPERIAL 650)
(defconst MIN-GOLD-AMOUNT-IMPERIAL 700)
(defconst MIN-STONE-AMOUNT-IMPERIAL 650)

#end-if		;if game type == wonder race



;**********************************
;FOR RUSHES

(defconst MIN-FOOD-AMOUNT-DARK-RUSH 500)
(defconst MIN-WOOD-AMOUNT-DARK-RUSH 200)
(defconst MIN-GOLD-AMOUNT-DARK-RUSH 300)
(defconst MIN-STONE-AMOUNT-DARK-RUSH 400)
(defconst MIN-FOOD-AMOUNT-FEUDAL-RUSH 400)
(defconst MIN-WOOD-AMOUNT-FEUDAL-RUSH 300)
(defconst MIN-GOLD-AMOUNT-FEUDAL-RUSH 200)
(defconst MIN-STONE-AMOUNT-FEUDAL-RUSH 200)
(defconst MIN-FOOD-AMOUNT-CASTLE-RUSH 500)
(defconst MIN-WOOD-AMOUNT-CASTLE-RUSH 300)
(defconst MIN-GOLD-AMOUNT-CASTLE-RUSH 400)
(defconst MIN-STONE-AMOUNT-CASTLE-RUSH 650)
(defconst MIN-FOOD-AMOUNT-IMPERIAL-RUSH 500)
(defconst MIN-WOOD-AMOUNT-IMPERIAL-RUSH 500)
(defconst MIN-GOLD-AMOUNT-IMPERIAL-RUSH 500)
(defconst MIN-STONE-AMOUNT-IMPERIAL-RUSH 400)

#load-if-defined BLACK-FOREST-MAP

(defconst NUMBER-GATES 6)

#else

(defconst NUMBER-GATES 5)

#end-if

(defconst villager-shepherd 973)
(defconst villager-forager 974)
(defconst villager-farmer 975)
(defconst villager-hunter 976)
(defconst villager-fisherman 977)
(defconst villager-food 978)
(defconst villager-wood 979)
(defconst villager-stone 980)
(defconst villager-gold 981)
(defconst villager-builder 982)
(defconst villager-repairer 983)
(defconst villager-base 984)

(defconst forage-food 907)
(defconst deer-food 909)
(defconst boar-food 910)

;--------------------------------------
; Define ProjectileType Constants
;--------------------------------------
(defconst projectile-town-center 0)
(defconst projectile-castle 1)
(defconst projectile-watch-tower 2)
(defconst projectile-bombard-tower 3)
(defconst projectile-ship 4)
(defconst projectile-siege 5)
(defconst projectile-fortification 6)
(defconst projectile-any 7)

(defconst unpacked-trebuchet 42)

(defconst map-size 194)
(defconst starting-zone 258)
(defconst main-zone 227)

(defconst position-self-x 478)
(defconst position-self-y 479)

(defconst retreatpoint-x 472)
(defconst retreatpoint-y 473)


;--------------------------------------
; Define ActionId Constants
;--------------------------------------
(defconst actionid-attack 600)
(defconst actionid-defend 601)
(defconst actionid-build 602)
(defconst actionid-heal 603)
(defconst actionid-convert 604)
(defconst actionid-explore 605)
(defconst actionid-stop 606)
(defconst actionid-runaway 607)
(defconst actionid-retreat 608)
(defconst actionid-gather 609)
(defconst actionid-move 610)
(defconst actionid-patrol 611)
(defconst actionid-follow 612)
(defconst actionid-hunt 613)
(defconst actionid-transport 614)
(defconst actionid-trade 615)
(defconst actionid-evade 616)
(defconst actionid-enter 617)
(defconst actionid-repair 618)
(defconst actionid-train 619)
(defconst actionid-research 620)
(defconst actionid-unload 621)
(defconst actionid-relic 631)

;--------------------------------------
; Define Formation Constants
;--------------------------------------
(defconst formation-line 2)
(defconst formation-box 4)
(defconst formation-stagger 7)
(defconst formation-flank 8)

;--------------------------------------
; Define AttackStance Constants
;--------------------------------------
(defconst stance-aggressive 0)
(defconst stance-defensive 1)
(defconst stance-stand-ground 2)
(defconst stance-no-attack 3)
