#load-if-not-defined WONDER-RACE


;Logic to ensure that primary units and secondary units are at most 2% of the population max apart.
;This is to ensure we have a strong millitary that counter each other's counters

(defrule
	(true)
=>
	(set-goal G-CAN-TRAIN-PRIMARY-UNIT NO)
	(set-goal G-CAN-TRAIN-SECONDARY-UNIT NO)
)

;Sometimes we do not define a secondary unit. In that case, do not block training
;of the primary unit.
(defrule
	(goal G-SECONDARY-UNIT NO)
=>
	(set-goal G-CAN-TRAIN-PRIMARY-UNIT YES)
)

;(defrule
;	(up-compare-goal G-PRIMARY-AND-SECONDARY-UNIT-COUNT-DIFF >= NEGATIVE-ONE-PERCENT-POP)
;=>
;	(set-goal G-CAN-TRAIN-SECONDARY-UNIT YES)
;)

;TODO: Doing this like this for now, until proper implementation
(defrule
	(or
		(up-object-type-count-total g: G-PRIMARY-UNIT < TWO-PERCENT-POP)
		(or
			(and
				(goal G-UPGRADED-PRIMARY-UNIT YES)
				(up-object-type-count-total g: G-PRIMARY-UNIT < FIVE-PERCENT-POP)
			)
			(and
				(goal G-UPGRADED-PRIMARY-UNIT YES)
				(goal G-UPGRADED-SECONDARY-UNIT YES)
			)
		)
	)
=>
	(set-goal G-CAN-TRAIN-PRIMARY-UNIT YES)
)

(defrule
	(or
		(up-object-type-count-total g: G-SECONDARY-UNIT < TWO-PERCENT-POP)
		(or
			(and
				(goal G-UPGRADED-SECONDARY-UNIT YES)
				(up-object-type-count-total g: G-SECONDARY-UNIT < FIVE-PERCENT-POP)
			)
			(and
				(goal G-UPGRADED-PRIMARY-UNIT YES)
				(goal G-UPGRADED-SECONDARY-UNIT YES)
			)
		)
	)
=>
	(set-goal G-CAN-TRAIN-SECONDARY-UNIT YES)
)

;---------------------------
;BARRACKS UNITS
;---------------------------



;SWORDSMEN
;--------------------



;Rule5: train swordsmen when the combat number defined that our base-unit or secondary-unit is the swordsman

(defrule
	(or
		(and
			(goal G-PRIMARY-UNIT militiaman-line)
			(goal G-CAN-TRAIN-PRIMARY-UNIT YES)
		)
		(and
			(goal G-SECONDARY-UNIT militiaman-line)
			(goal G-CAN-TRAIN-SECONDARY-UNIT YES)
		)
	)
	(unit-type-count-total militiaman-line < SEVENTY-PERCENT-POP)
	(can-train militiaman-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(goal RUSH-CONTROL NO)
=>
	(train militiaman-line)
)

(defrule
	(or
		(and
			(goal G-PRIMARY-UNIT militiaman-line)
			(goal G-CAN-TRAIN-PRIMARY-UNIT YES)
		)
		(and
			(goal G-SECONDARY-UNIT militiaman-line)
			(goal G-CAN-TRAIN-SECONDARY-UNIT YES)
		)
	)
	(unit-type-count-total militiaman-line < SEVENTY-PERCENT-POP)
	(can-train militiaman-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(goal RUSH-CONTROL NO)
=>
	(train militiaman-line)
)

;--------------------



;Rule5: train spearmen when the combat number defined that our base-unit or secondary-unit is the spearman

(defrule
	(or
		(and
			(goal G-PRIMARY-UNIT spearman-line)
			(goal G-CAN-TRAIN-PRIMARY-UNIT YES)
		)
		(and
			(goal G-SECONDARY-UNIT spearman-line)
			(goal G-CAN-TRAIN-SECONDARY-UNIT YES)
		)
	)
	(unit-type-count-total spearman-line < SEVENTY-PERCENT-POP)
	(can-train spearman-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(goal RUSH-CONTROL NO)
	(building-type-count-total town-center > 1)
	(or
    	(food-amount > 200);leave food for constant villager production
	    (goal TRAIN-VILLAGERS NO)
  	)
=>
	(train spearman-line)
)

(defrule
	(military-population >= NINE-PERCENT-POP)
	(unit-type-count-total spearman-line < FIVE-PERCENT-POP)
	(can-train spearman-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(goal RUSH-CONTROL NO)
	(or
    	(food-amount > 200);leave food for constant villager production
	    (goal TRAIN-VILLAGERS NO)
  	)
=>
	(train spearman-line)
)

(defrule
 	(current-age == feudal-age)
 	(unit-type-count-total spearman-line < 5)
 	(can-train spearman-line)
	(players-military-population any-enemy > 5)
	(not (goal RUSH-CONTROL RUSHING))
	(not (goal RUSH-CONTROL CASTLE))
=>			;then
 	(train spearman)
)


;Add some spearmen when rushing when we have enough knights
(defrule
	(current-age >= castle-age)
	(goal RUSH-CONTROL RUSHING)
	(unit-type-count-total spearman-line < SEVENTY-PERCENT-POP)
	(can-train spearman-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(goal G-PRIMARY-UNIT knight-line)
	(goal G-SECONDARY-UNIT spearman-line)
	(building-type-count-total stable > 0)
	(or
		(unit-type-count-total knight-line >= 4)
		(food-amount > 500)
	)
	(or
    	(food-amount > 200);leave food for constant villager production
	    (goal TRAIN-VILLAGERS NO)
  	)
=>
	(train spearman-line)
)

(defrule
	(current-age >= castle-age)
	(goal RUSH-CONTROL RUSHING)
	(can-train spearman-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(not (goal G-PRIMARY-UNIT eagle-warrior-line))
	(gold-amount < 50)
	(food-amount > 500)
	(current-age-time > 420)
=>
	(train spearman-line)
)

;Train some step lancers as backup if possible
(defrule
	(military-population >= NINE-PERCENT-POP)
	(unit-type-count-total spearman-line < THREE-PERCENT-POP)
	(can-train steppe-lancer-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(goal RUSH-CONTROL NO)
	(or
    	(food-amount > 200);leave food for constant villager production
	    (goal TRAIN-VILLAGERS NO)
  	)
=>
	(train steppe-lancer-line)
)
;----------------------------



;Rule5: train eagle-warriors when the combat number defined that our base-unit or secondary-unit is the eagle-warrior

(defrule
	(or
		(and
			(goal G-PRIMARY-UNIT eagle-warrior-line)
			(goal G-CAN-TRAIN-PRIMARY-UNIT YES)
		)
		(and
			(goal G-SECONDARY-UNIT eagle-warrior-line)
			(goal G-CAN-TRAIN-SECONDARY-UNIT YES)
		)
	)
	(unit-type-count-total eagle-warrior-line < SEVENTY-PERCENT-POP)
	(can-train eagle-warrior-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(goal RUSH-CONTROL NO)
=>
	(train eagle-warrior-line)
)

(defrule
	(goal G-PRIMARY-UNIT eagle-warrior-line)
	(current-age == feudal-age)
	(goal RUSH-CONTROL CASTLE)
	(or
		(and
			(food-amount > 825)
			(gold-amount > 250)
		)
		(up-research-status c: castle-age >= research-pending)
	)
	(unit-type-count-total eagle-warrior-line < 12)
	(can-train eagle-warrior-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
=>
	(train eagle-warrior-line)
)

(defrule
	(goal G-PRIMARY-UNIT eagle-warrior-line)
	(current-age >= castle-age)
	(goal RUSH-CONTROL RUSHING)
	(or
		(and
			(food-amount > 300)
			(gold-amount > 400)
		)
		(unit-type-count-total eagle-warrior-line < 12)
	)
	(can-train eagle-warrior-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
=>
	(train eagle-warrior-line)
)

(defrule
	(goal G-PRIMARY-UNIT eagle-warrior-line)
	(current-age >= castle-age)
	(goal RUSH-CONTROL RUSHING)
	(unit-type-count-total eagle-warrior-line < SEVENTY-PERCENT-POP)
	(can-train eagle-warrior-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(not (research-available ri-scale-mail))
	(not (research-available ri-chain-mail))
	(not (research-available ri-forging))
	(not (research-available ri-iron-casting))
=>
	(train eagle-warrior-line)
)
;//////////////////////////////////////////////////////////////////////////////////////////////////////////////



;------------------------------------
;ARCHERY-RANGE UNITS
;------------------------------------



;ARCHERS
;--------------



;Rule20: train archers when the combat number defined that our base-unit or secondary-unit is the archer

(defrule
	(or
		(and
			(goal G-PRIMARY-UNIT archer-line)
			(goal G-CAN-TRAIN-PRIMARY-UNIT YES)
		)
		(and
			(goal G-SECONDARY-UNIT archer-line)
			(goal G-CAN-TRAIN-SECONDARY-UNIT YES)
		)
	)
	(building-type-count archery-range >= 1)
	(unit-type-count-total archer-line < SEVENTY-PERCENT-POP)
	(can-train archer-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(goal RUSH-CONTROL NO)
=>
	(train archer-line)
)

(defrule
	(current-age == feudal-age)
	(goal RUSH-CONTROL RUSHING)
	(building-type-count archery-range >= 1)
	(unit-type-count-total archer-line < TWO-PERCENT-POP)
	(can-train archer-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
=>
	(train archer-line)
)
;---------------------



;Rule50: train skirmishers when the combat number defined that our base-unit or secondary-unit is the skirmisher

(defrule
	(or
		(and
			(goal G-PRIMARY-UNIT skirmisher-line)
			(goal G-CAN-TRAIN-PRIMARY-UNIT YES)
		)
		(and
			(goal G-SECONDARY-UNIT skirmisher-line)
			(goal G-CAN-TRAIN-SECONDARY-UNIT YES)
		)
	)
	(unit-type-count-total skirmisher-line < SEVENTY-PERCENT-POP)
	(can-train skirmisher-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(goal RUSH-CONTROL NO)
	(building-type-count-total town-center > 1)
	(or
		(building-type-count-total town-center > 2)
		(wood-amount > 400)
	)
	(or
    	(food-amount > 200);leave food for constant villager production
	    (goal TRAIN-VILLAGERS NO)
  	)
=>
	(train skirmisher-line)
)

(defrule
 	(current-age == feudal-age)
 	(unit-type-count-total skirmisher-line < 5)
 	(can-train skirmisher-line)
	(players-military-population any-enemy > 5)
=>			;then
 	(train skirmisher)
)

(defrule
	(current-age == feudal-age)
	(goal RUSH-CONTROL RUSHING)
	(unit-type-count-total skirmisher-line < SEVENTY-PERCENT-POP)
	(can-train skirmisher-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
=>
	(train skirmisher-line)
)

;Add skirmishers when castle rushing
(defrule
	(current-age >= castle-age)
	(goal RUSH-CONTROL RUSHING)
	(unit-type-count-total skirmisher-line < SEVENTY-PERCENT-POP)
	(can-train skirmisher-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(goal G-PRIMARY-UNIT knight-line)
	(goal G-SECONDARY-UNIT skirmisher-line)
	(or
		(unit-type-count-total knight-line < 8)
		(not (research-available ri-scale-barding))
	)
	(building-type-count-total town-center > 1)
=>
	(train skirmisher-line)
)

;Always mix in some skirmisher as they are very cheap (only some food and wood) and counter any archer types.
(defrule
    (military-population >= TWENTY-FIVE-PERCENT-POP)
	(unit-type-count-total skirmisher-line < TEN-PERCENT-POP)
	(can-train skirmisher-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(or
    	(food-amount > 200);leave food for constant villager production
	    (goal TRAIN-VILLAGERS NO)
  	)
=>
	(train skirmisher-line)
)

;---------------------



;Rule50: train cavalry-archer-lines when the combat number defined that our base-unit or secondary-unit is the cavalry-archer-line

(defrule
	(or
		(and
			(goal G-PRIMARY-UNIT cavalry-archer-line)
			(goal G-CAN-TRAIN-PRIMARY-UNIT YES)
		)
		(and
			(goal G-SECONDARY-UNIT cavalry-archer-line)
			(goal G-CAN-TRAIN-SECONDARY-UNIT YES)
		)
	)
	(unit-type-count-total cavalry-archer-line < SEVENTY-PERCENT-POP)
	(can-train cavalry-archer-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(goal RUSH-CONTROL NO)
=>
	(train cavalry-archer-line)
)

(defrule
	(current-age >= castle-age)
	(goal RUSH-CONTROL RUSHING)
	(building-type-count archery-range >= 1)
	(unit-type-count-total cavalry-archer-line < TWO-PERCENT-POP)
	(can-train cavalry-archer-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal G-PRIMARY-UNIT NO)
	(goal G-SECONDARY-UNIT NO)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
=>
	(train cavalry-archer-line)
)

(defrule
	(building-type-count archery-range >= 1)
	(military-population >= FOURTY-FIVE-PERCENT-POP)
	(can-train heavy-cavalry-archer)
	(unit-type-count-total trebuchet > 0)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
=>
	(train heavy-cavalry-archer)
)
;//////////////////////////////////////////////////////////////////////////////////////////////////////////////



;----------------------
;STABLE UNITS
;----------------------



;LIGHT-CAVALRY
;-------------------------



;Rule65: train light cavalry when the combat number defined that our base-unit or secondary-unit is the light cavalry

(defrule
	(or
		(and
			(goal G-PRIMARY-UNIT scout-cavalry-line)
			(goal G-CAN-TRAIN-PRIMARY-UNIT YES)
		)
		(and
			(goal G-SECONDARY-UNIT scout-cavalry-line)
			(goal G-CAN-TRAIN-SECONDARY-UNIT YES)
		)
	)
	(unit-type-count-total scout-cavalry-line < SEVENTY-PERCENT-POP)
	(can-train scout-cavalry-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(goal RUSH-CONTROL NO)
	(or
    	(food-amount > 200);leave food for constant villager production
	    (goal TRAIN-VILLAGERS NO)
  	)
=>
	(train scout-cavalry-line)
)

(defrule
	(current-age >= castle-age)
	(goal RUSH-CONTROL RUSHING)
	(can-train scout-cavalry-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(gold-amount < 20)
	(food-amount > 300)
	(current-age-time > 420)
=>
	(train scout-cavalry-line)
)
;--------------


(defrule
	(or
		(and
			(goal G-PRIMARY-UNIT knight-line)
			(goal G-CAN-TRAIN-PRIMARY-UNIT YES)
		)
		(and
			(goal G-SECONDARY-UNIT knight-line)
			(goal G-CAN-TRAIN-SECONDARY-UNIT YES)
		)
	)
	(unit-type-count-total knight-line < SEVENTY-PERCENT-POP)
	(can-train knight-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(goal RUSH-CONTROL NO)
	(or
    (food-amount > 200);leave food for constant villager production
    (goal TRAIN-VILLAGERS NO)
  )
=>
	(train knight-line)
)

(defrule
	(or
		(and
			(goal G-PRIMARY-UNIT steppe-lancer-line)
			(goal G-CAN-TRAIN-PRIMARY-UNIT YES)
		)
		(and
			(goal G-SECONDARY-UNIT steppe-lancer-line)
			(goal G-CAN-TRAIN-SECONDARY-UNIT YES)
		)
	)
	(unit-type-count-total steppe-lancer-line < SEVENTY-PERCENT-POP)
	(can-train steppe-lancer-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(goal RUSH-CONTROL NO)
	(food-amount > 100) ;leave some food for constant villager training
=>
	(train steppe-lancer-line)
)

;Always mix in some knights if we have them available as they are strong.
(defrule
	(military-population >= EIGHT-PERCENT-POP)
	(unit-type-count-total knight-line < FIVE-PERCENT-POP)
	(can-train knight-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(goal RUSH-CONTROL NO)
	(or
    	(food-amount > 200);leave food for constant villager production
	    (goal TRAIN-VILLAGERS NO)
  	)
=>
	(train knight-line)
)

#load-if-not-defined DEATH-MATCH
;Always mix in some knights in early game as they are strong.
(defrule
    (game-time < 1800)
	(unit-type-count-total knight-line < FIVE-PERCENT-POP)
	(can-train knight-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(or
    	(food-amount > 200);leave food for constant villager production
	    (goal TRAIN-VILLAGERS NO)
  	)
=>
	(train knight-line)
)
#end-if

(defrule
	(current-age >= castle-age)
	(goal RUSH-CONTROL RUSHING)
	(unit-type-count-total knight-line < SEVENTY-PERCENT-POP)
	(can-train knight-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(goal G-PRIMARY-UNIT knight-line)
	(or
		(unit-type-count-total knight-line < 8)
		(not (research-available ri-scale-barding))
	)
	(or
    	(food-amount > 200);leave food for constant villager production
	    (goal TRAIN-VILLAGERS NO)
  	)
=>
	(train knight-line)
)

;Train some knights in early castle age as they are the strongest
;unit at that time then
(defrule
    (current-age >= castle-age)
	(current-age-time < 900)
	(can-train knight-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(or
		(and
			(goal UNDER-ATTACK YES)
			(unit-type-count-total knight-line < FIVE-PERCENT-POP)
		)
		(and
			(goal RUSH-CONTROL NO)
			(unit-type-count-total knight-line < TWO-PERCENT-POP)
		)
	)
=>
	(train knight-line)
)

(defrule
	(unit-type-count-total knight-line < SEVENTY-PERCENT-POP)
	(can-train paladin)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(or
    	(food-amount > 200);leave food for constant villager production
	    (goal TRAIN-VILLAGERS NO)
  	)
=>
	(train paladin)
)
;-------------



;Rule80: train camels when the combat number defined that our base-unit or secondary-unit is the camel

(defrule
	(or
		(and
			(goal G-PRIMARY-UNIT camel-line)
			(goal G-CAN-TRAIN-PRIMARY-UNIT YES)
		)
		(and
			(goal G-SECONDARY-UNIT camel-line)
			(goal G-CAN-TRAIN-SECONDARY-UNIT YES)
		)
	)
	(unit-type-count-total camel-line < SEVENTY-PERCENT-POP)
	(can-train camel-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(goal RUSH-CONTROL NO)
	(or
    	(food-amount > 200);leave food for constant villager production
	    (goal TRAIN-VILLAGERS NO)
  	)
=>
	(train camel-line)
)
;//////////////////////////////////////////////////////////////////////////////////////////////////////////////



;------------------------
;UNIQUE UNITS
;------------------------



#load-if-defined GOTHIC-CIV



;TRAINING HUSKARLS AT THE BARRACKS
;--------------------------------------------------------------



;Rule80: train huskarls when the combat number defined that our base-unit or secondary-unit is the huskarl

(defrule
	(or
		(and
			(goal G-PRIMARY-UNIT my-unique-unit-line)
			(goal G-CAN-TRAIN-PRIMARY-UNIT YES)
		)
		(and
			(goal G-SECONDARY-UNIT my-unique-unit-line)
			(goal G-CAN-TRAIN-SECONDARY-UNIT YES)
		)
	)
	(building-type-count barracks >= 1)
	(unit-type-count-total 759 < SEVENTY-PERCENT-POP)
	(can-train 759)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
=>
	(train 759)
)
;--------------------------



;Rule80: train huskarls when the combat number defined that our base-unit or secondary-unit is the huskarl

(defrule
	(or
		(and
			(goal G-PRIMARY-UNIT my-unique-unit-line)
			(goal G-CAN-TRAIN-PRIMARY-UNIT YES)
		)
		(and
			(goal G-SECONDARY-UNIT my-unique-unit-line)
			(goal G-CAN-TRAIN-SECONDARY-UNIT YES)
		)
	)
	(building-type-count barracks >= 1)
	(unit-type-count-total 761 < SEVENTY-PERCENT-POP)
	(current-age == imperial-age)
	(can-train 761)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
=>
	(train 761)
)


#end-if		;if civ == gothic civ



;Rule80: train unique unit if it is the primary or secondary combat unit

(defrule
	(or
		(and
			(goal G-PRIMARY-UNIT my-unique-unit-line)
			(goal G-CAN-TRAIN-PRIMARY-UNIT YES)
		)
		(and
			(goal G-SECONDARY-UNIT my-unique-unit-line)
			(goal G-CAN-TRAIN-SECONDARY-UNIT YES)
		)
	)
	(unit-type-count-total my-unique-unit-line < SEVENTY-PERCENT-POP)
	(can-train my-unique-unit-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(goal RUSH-CONTROL NO)
=>
	(train my-unique-unit-line)
)

;Always mix in some of my unique units. They are always useful in one way or another
;even if not selected as primary or secondary unit.
(defrule
	(military-population >= TEN-PERCENT-POP)
	(can-train my-unique-unit-line)
	(unit-type-count-total my-unique-unit-line < FIVE-PERCENT-POP)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(goal RUSH-CONTROL NO)
=>
	(train my-unique-unit-line)
)

;--------------------------------------------------------------------------

;Rule81: train monk to get the relics

(defrule
	(building-type-count monastery > 0)
	(can-train monk)
	(unit-type-count-total monk < 2)
	(or
		(goal ABLE-TO-TRAIN-UNITS YES)
		(or
			(goal ABLE-TO-TRAIN-LAND-UNITS YES)
			(gold-amount > 600)
		)
	)
=>
	(train monk)
)

(defrule
	(building-type-count monastery > 0)
	(can-train monk)
	(or
		(and
			(unit-type-count-total monk < 4)
			(not (civ-selected spanish))
		)
		(and
			(unit-type-count-total monk < 1)
			(civ-selected spanish)
		)
	)
	(military-population > TEN-PERCENT-POP)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
=>
	(train monk)
)

(defrule
	(building-type-count monastery > 0)
	(can-train missionary)
	(unit-type-count-total missionary < 3)
	(civ-selected spanish)
	(military-population > TEN-PERCENT-POP)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
=>
	(train missionary)
)
;HAND-CANNONEERS
;==================



;Rule42: If the speaciality unit hand cannoneer is available

(defrule
	(can-train hand-cannoneer)
	(unit-type-count-total hand-cannoneer < FIVE-PERCENT-POP)
	(difficulty <= moderate)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
=>
	(train hand-cannoneer)
)
;SIEGE-WEAPONS (only moderate, hard and hardest)



;===========
;mangonel-lineS
;===========



;WHEN THE RANDOM NUMBER CHOSE THAT WE'LL TRAIN mangonel-lineS AS THE PRIMARY COMBAT SIEGE UNIT
;---------------------------------------------------------------------------------------------------------------------------------------------------------------------



;MODERATE
;------------------



#load-if-defined DIFFICULTY-MODERATE

;Rule11: train mangonels when we play on moderate and the combat number define that our primary-combat-siege-unit is mangonel

(defrule
	(goal PRIMARY-COMBAT-SIEGE-UNIT mangonel-line)
	(building-type-count siege-workshop >= 1)
	(unit-type-count-total mangonel-line < THREE-PERCENT-POP)
	(can-train mangonel-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(or
		(and
			(not (death-match-game))
			(military-population >= FIVE-PERCENT-POP)
		)
		(military-population >= THIRTY-PERCENT-POP)
	)
=>
	(train mangonel-line)
)

#end-if 		;if difficulty = moderate



;HARD
;---------



#load-if-defined DIFFICULTY-HARD

;Rule12: train mangonels when we play on hard and the combat number define that our primary-combat-siege-unit is mangonel

(defrule
	(goal PRIMARY-COMBAT-SIEGE-UNIT mangonel-line)
	(building-type-count siege-workshop >= 1)
	(unit-type-count-total mangonel-line < THREE-PERCENT-POP)
	(can-train mangonel-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(or
		(and
			(not (death-match-game))
			(military-population >= FIVE-PERCENT-POP)
		)
		(military-population >= THIRTY-PERCENT-POP)
	)
=>
	(train mangonel-line)
)

#end-if 		;if difficulty = hard



;HARDEST
;--------------



#load-if-defined DIFFICULTY-HARDEST

;Rule13: train mangonels when we play on hardest and the combat number define that our primary-combat-siege-unit is mangonel

(defrule
	(goal PRIMARY-COMBAT-SIEGE-UNIT mangonel-line)
	(building-type-count siege-workshop >= 1)
	(unit-type-count-total mangonel-line < FOUR-PERCENT-POP)
	(can-train mangonel-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(or
		(and
			(not (death-match-game))
			(military-population >= FIVE-PERCENT-POP)
		)
		(military-population >= THIRTY-PERCENT-POP)
	)
=>
	(train mangonel-line)
)

#end-if 		;if difficulty = hardest



;WHEN THE RANDOM NUMBER CHOSE THAT WE'LL TRAIN mangonel-lineS AS THE SECONDARY COMBAT SIEGE UNIT
;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------



;MODERATE
;------------------



#load-if-defined DIFFICULTY-MODERATE

;Rule14: train mangonels when we play on moderate and the combat number define that our secondary-combat-siege-unit is mangonel

(defrule
	(goal SECONDARY-COMBAT-SIEGE-UNIT mangonel-line)
	(building-type-count siege-workshop >= 1)
	(unit-type-count-total mangonel-line < ONE-PERCENT-POP)
	(can-train mangonel-line)
	(current-age < imperial-age)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(or
		(and
			(not (death-match-game))
			(military-population >= FIVE-PERCENT-POP)
		)
		(military-population >= THIRTY-PERCENT-POP)
	)
=>
	(train mangonel-line)
)

#end-if 		;if difficulty = moderate



;HARD
;---------



#load-if-defined DIFFICULTY-HARD

;Rule15: train mangonels when we play on hard and the combat number define that our secondary-combat-siege-unit is mangonel

(defrule
	(goal SECONDARY-COMBAT-SIEGE-UNIT mangonel-line)
	(building-type-count siege-workshop >= 1)
	(unit-type-count-total mangonel-line < TWO-PERCENT-POP)
	(can-train mangonel-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(or
		(and
			(not (death-match-game))
			(military-population >= FIVE-PERCENT-POP)
		)
		(military-population >= THIRTY-PERCENT-POP)
	)
=>
	(train mangonel-line)
)

#end-if 		;if difficulty = hard



;HARDEST
;--------------



#load-if-defined DIFFICULTY-HARDEST

;Rule16: train mangonels when we play on hardest and the combat number define that our secondary-combat-siege-unit is mangonel

(defrule
	(goal SECONDARY-COMBAT-SIEGE-UNIT mangonel-line)
	(building-type-count siege-workshop >= 1)
	(unit-type-count-total mangonel-line < TWO-PERCENT-POP)
	(can-train mangonel-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(or
		(and
			(not (death-match-game))
			(military-population >= FIVE-PERCENT-POP)
		)
		(military-population >= THIRTY-PERCENT-POP)
	)
=>
	(train mangonel-line)
)

#end-if 		;if difficulty = hardest



;======
;battering-ram-lineS
;======



;MODERATE
;------------------



#load-if-defined DIFFICULTY-MODERATE

;Rule17: train rams when we play on moderate and the combat number define that our primary-combat-siege-unit is ram

(defrule
	(goal PRIMARY-COMBAT-SIEGE-UNIT battering-ram-line)
	(building-type-count siege-workshop >= 1)
	(unit-type-count-total battering-ram-line < THREE-PERCENT-POP)
	(can-train battering-ram-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(or
		(and
			(not (death-match-game))
			(military-population >= FIVE-PERCENT-POP)
		)
		(military-population >= THIRTY-PERCENT-POP)
	)
=>
	(train battering-ram-line)
)

#end-if 		;if difficulty = moderate



;HARD
;---------



#load-if-defined DIFFICULTY-HARD

;Rule18: train rams when we play on hard and the combat number define that our primary-combat-siege-unit is ram

(defrule
	(goal PRIMARY-COMBAT-SIEGE-UNIT battering-ram-line)
	(building-type-count siege-workshop >= 1)
	(unit-type-count-total battering-ram-line < THREE-PERCENT-POP)
	(can-train battering-ram-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(or
		(and
			(not (death-match-game))
			(military-population >= FIVE-PERCENT-POP)
		)
		(military-population >= THIRTY-PERCENT-POP)
	)
=>
	(train battering-ram-line)
)

#end-if 		;if difficulty = hard



;HARDEST
;--------------



#load-if-defined DIFFICULTY-HARDEST

;Rule19: train rams when we play on hard and the combat number define that our primary-combat-siege-unit is ram

(defrule
	(goal PRIMARY-COMBAT-SIEGE-UNIT battering-ram-line)
	(building-type-count siege-workshop >= 1)
	(unit-type-count-total battering-ram-line < FOUR-PERCENT-POP)
	(can-train battering-ram-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(or
		(and
			(not (death-match-game))
			(military-population >= FIVE-PERCENT-POP)
		)
		(military-population >= THIRTY-PERCENT-POP)
	)
=>
	(train battering-ram-line)
)

#end-if 		;if difficulty = hardest



;Rule19: maintain some rams, they are always useful

(defrule
	(or
		(unit-type-count-total battering-ram-line < 1)
		(and
			(unit-type-count-total battering-ram-line < 2)
			(gold-amount > 400)
		)
	)
	(difficulty <= hard)
	(can-train battering-ram-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
=>
	(train battering-ram-line)
)

(defrule
 	(can-train battering-ram-line)
 	(goal RUSH-CONTROL RUSHING)
	(unit-type-count-total battering-ram-line < 6)
	(military-population > FOUR-PERCENT-POP)
=>
 	(train battering-ram-line)
;	(chat-local-to-self "train ram")
)

;----------------------------------------------------------------------------------------------------------------------------------------------------------------



;MODERATE
;------------------



#load-if-defined DIFFICULTY-MODERATE

;Rule17: train rams when we play on moderate and the combat number define that our secondary-combat-siege-unit is ram

(defrule
	(goal SECONDARY-COMBAT-SIEGE-UNIT battering-ram-line)
	(building-type-count siege-workshop >= 1)
	(unit-type-count-total battering-ram-line < ONE-PERCENT-POP)
	(can-train battering-ram-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(or
		(and
			(not (death-match-game))
			(military-population >= FIVE-PERCENT-POP)
		)
		(military-population >= THIRTY-PERCENT-POP)
	)
=>
	(train battering-ram-line)
)

#end-if 		;if difficulty = moderate



;HARD
;---------



#load-if-defined DIFFICULTY-HARD

;Rule18: train rams when we play on hard and the combat number define that our secondary-combat-siege-unit is ram

(defrule
	(goal SECONDARY-COMBAT-SIEGE-UNIT battering-ram-line)
	(unit-type-count-total battering-ram-line < TWO-PERCENT-POP)
	(can-train battering-ram-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(or
		(and
			(not (death-match-game))
			(military-population >= FIVE-PERCENT-POP)
		)
		(military-population >= THIRTY-PERCENT-POP)
	)
=>
	(train battering-ram-line)
)

;Always add some rams if we have a large army
(defrule
	(goal SECONDARY-COMBAT-SIEGE-UNIT battering-ram-line)
	(unit-type-count-total battering-ram-line < 5)
	(can-train battering-ram-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(military-population >= TWENTY-PERCENT-POP)
=>
	(train battering-ram-line)
)

#end-if 		;if difficulty = hard



;HARDEST
;--------------



#load-if-defined DIFFICULTY-HARDEST

;Rule19: train rams when we play on hard and the combat number define that our secondary-combat-siege-unit is ram

(defrule
	(goal SECONDARY-COMBAT-SIEGE-UNIT battering-ram-line)
	(building-type-count siege-workshop >= 1)
	(unit-type-count-total battering-ram-line < TWO-PERCENT-POP)
	(can-train battering-ram-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(or
		(and
			(not (death-match-game))
			(military-population >= FIVE-PERCENT-POP)
		)
		(military-population >= THIRTY-PERCENT-POP)
	)
=>
	(train battering-ram-line)
)

;Always add some rams if we have a large army
(defrule
	(goal SECONDARY-COMBAT-SIEGE-UNIT battering-ram-line)
	(unit-type-count-total battering-ram-line < 5)
	(can-train battering-ram-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(military-population >= TWENTY-PERCENT-POP)
=>
	(train battering-ram-line)
)

#end-if 		;if difficulty = hardest



;==========
;scorpion-lineS
;==========



;WHEN THE RANDOM NUMBER CHOSE THAT WE'LL TRAIN scorpion-lineS AS THE PRIMARY COMBAT SIEGE UNIT
;------------------------------------------------------------------------------------------------------------------------------------------------------------------



;MODERATE
;------------------



#load-if-defined DIFFICULTY-MODERATE

;Rule23: train scorpions when we play on moderate and the combat number define that our primary-combat-siege-unit is scorpion

(defrule
	(goal PRIMARY-COMBAT-SIEGE-UNIT scorpion-line)
	(building-type-count siege-workshop >= 1)
	(unit-type-count-total scorpion-line < SEVEN-PERCENT-POP)
	(can-train scorpion-line)
	(nand
		(goal ABLE-TO-TRAIN-UNITS NO)
		(current-age < imperial-age)
	)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(military-population >= THREE-PERCENT-POP)
=>
	(train scorpion-line)
)

#end-if 		;if difficulty = moderate



;HARD
;---------



#load-if-defined DIFFICULTY-HARD

;Rule24: train scorpions when we play on hard and the combat number define that our primary-combat-siege-unit is scorpion

(defrule
	(goal PRIMARY-COMBAT-SIEGE-UNIT scorpion-line)
	(building-type-count siege-workshop >= 1)
	(unit-type-count-total scorpion-line < FIFTEEN-PERCENT-POP)
	(can-train scorpion-line)
	(nand
		(goal ABLE-TO-TRAIN-UNITS NO)
		(current-age < imperial-age)
	)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(military-population >= THREE-PERCENT-POP)
=>
	(train scorpion-line)
)

#end-if 		;if difficulty = hard



;HARDEST
;--------------



#load-if-defined DIFFICULTY-HARDEST

;Rule25: train scorpions when we play on hard and the combat number define that our primary-combat-siege-unit is scorpion

(defrule
	(goal PRIMARY-COMBAT-SIEGE-UNIT scorpion-line)
	(unit-type-count-total scorpion-line < FIFTEEN-PERCENT-POP)
	(can-train scorpion-line)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(military-population >= THREE-PERCENT-POP)
=>
	(train scorpion-line)
)

#end-if 		;if difficulty = hardest



;Rule19: maintain 3 scorpions

(defrule
	(building-type-count siege-workshop >= 1)
	(or
		(unit-type-count-total battering-ram-line < 1)
		(and
			(unit-type-count-total battering-ram-line < 3)
			(gold-amount > 300)
		)
	)
	(difficulty <= hard)
	(can-train scorpion-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(current-age == imperial-age)
=>
	(train scorpion-line)
)
;-----------------------------------------------------------------------------------------------------------------------------------------------------------------------



;MODERATE
;------------------



#load-if-defined DIFFICULTY-MODERATE

;Rule26: train scorpions when we play on moderate and the combat number define that our secondary-combat-siege-unit is scorpion

(defrule
	(goal SECONDARY-COMBAT-SIEGE-UNIT scorpion-line)
	(unit-type-count-total scorpion-line < ONE-PERCENT-POP)
	(can-train scorpion-line)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(military-population >= FIVE-PERCENT-POP)
=>
	(train scorpion-line)
)

#end-if 		;if difficulty = moderate



;HARD
;---------



#load-if-defined DIFFICULTY-HARD

;Rule27: train scorpions when we play on hard and the combat number define that our secondary-combat-siege-unit is scorpion

(defrule
	(goal SECONDARY-COMBAT-SIEGE-UNIT scorpion-line)
	(unit-type-count-total scorpion-line < TWO-PERCENT-POP)
	(can-train scorpion-line)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(military-population >= FIVE-PERCENT-POP)
=>
	(train scorpion-line)
)

#end-if 		;if difficulty = hard



;HARDEST
;--------------



#load-if-defined DIFFICULTY-HARDEST

;Rule28: train scorpions when we play on hardest and the combat number define that our secondary-combat-siege-unit is scorpion

(defrule
	(goal SECONDARY-COMBAT-SIEGE-UNIT scorpion-line)
	(unit-type-count-total scorpion-line < TWO-PERCENT-POP)
	(can-train scorpion-line)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(military-population >= FIVE-PERCENT-POP)
=>
	(train scorpion-line)
)

#end-if 		;if difficulty = hardest



;============
;trebuchetS
;============



;WHEN THE RANDOM NUMBER CHOSE THAT WE'LL TRAIN trebuchetS AS THE PRIMARY COMBAT SIEGE UNIT
;---------------------------------------------------------------------------------------------------------------------------------------------------------------------



;MODERATE
;------------------



#load-if-defined DIFFICULTY-MODERATE

;Rule29: train trebuchets when we play on moderate and the combat number define that our primary-combat-siege-unit is trebuchet

(defrule
	(goal PRIMARY-COMBAT-SIEGE-UNIT trebuchet)
	(building-type-count castle >= 1)
	(unit-type-count-total trebuchet < THREE-PERCENT-POP)
	(can-train trebuchet)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(military-population >= FIVE-PERCENT-POP)
	(goal UNDER-ATTACK NO)
=>
	(train trebuchet)
)

;On moderate always add 1 trebuchet if we have large army
(defrule
	(unit-type-count-total trebuchet < 1)
	(can-train trebuchet)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(military-population >= FIFTEEN-PERCENT-POP)
	(goal UNDER-ATTACK NO)
=>
	(train trebuchet)
)

#end-if 		;if difficulty = moderate



;HARD
;---------



#load-if-defined DIFFICULTY-HARD

;Rule30: train trebuchets when we play on hard and the combat number define that our primary-combat-siege-unit is trebuchet

(defrule
	(goal PRIMARY-COMBAT-SIEGE-UNIT trebuchet)
	(unit-type-count-total trebuchet < FOUR-PERCENT-POP)
	(can-train trebuchet)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(military-population >= FIVE-PERCENT-POP)
	(goal UNDER-ATTACK NO)
=>
	(train trebuchet)
)

;On hard always add 3 trebuchets if we have large army
(defrule
	(unit-type-count-total trebuchet < 3)
	(can-train trebuchet)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(military-population >= FIFTEEN-PERCENT-POP)
	(goal UNDER-ATTACK NO)
=>
	(train trebuchet)
)

#end-if 		;if difficulty = hard



;HARDEST
;--------------



#load-if-defined DIFFICULTY-HARDEST

;Rule31: train trebuchets when we play on hard and the combat number define that our primary-combat-siege-unit is trebuchet

(defrule
	(goal PRIMARY-COMBAT-SIEGE-UNIT trebuchet)
	(building-type-count castle >= 1)
	(unit-type-count-total trebuchet < FIVE-PERCENT-POP)
	(can-train trebuchet)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(military-population >= FIVE-PERCENT-POP)
	(goal UNDER-ATTACK NO)
=>
	(train trebuchet)
)

;On hardest always add 3 trebuchets if we have large army
(defrule
	(unit-type-count-total trebuchet < 3)
	(can-train trebuchet)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(military-population >= TEN-PERCENT-POP)
	(goal UNDER-ATTACK NO)
=>
	(train trebuchet)
)

;On hardest always add 6 trebuchets if we have large army
(defrule
	(unit-type-count-total trebuchet < 6)
	(can-train trebuchet)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(military-population >= FIFTEEN-PERCENT-POP)
	(goal UNDER-ATTACK NO)
=>
	(train trebuchet)
)

#end-if 		;if difficulty = hardest



;WHEN THE RANDOM NUMBER CHOSE THAT WE'LL TRAIN trebuchetS AS THE SECONDARY COMBAT SIEGE UNIT
;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------



;MODERATE
;------------------



#load-if-defined DIFFICULTY-MODERATE

;Rule32: train trebuchets when we play on moderate and the combat number define that our secondary-combat-siege-unit is trebuchet

(defrule
	(goal SECONDARY-COMBAT-SIEGE-UNIT trebuchet)
	(building-type-count castle >= 1)
	(unit-type-count-total trebuchet < ONE-PERCENT-POP)
	(can-train trebuchet)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(military-population >= FIVE-PERCENT-POP)
	(goal UNDER-ATTACK NO)
=>
	(train trebuchet)
)

#end-if 		;if difficulty = moderate



;HARD
;---------



#load-if-defined DIFFICULTY-HARD

;Rule33: train trebuchets when we play on hard and the combat number define that our secondary-combat-siege-unit is trebuchet

(defrule
	(goal SECONDARY-COMBAT-SIEGE-UNIT trebuchet)
	(building-type-count castle >= 1)
	(unit-type-count-total trebuchet < TWO-PERCENT-POP)
	(can-train trebuchet)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(military-population >= FIVE-PERCENT-POP)
	(goal UNDER-ATTACK NO)
=>
	(train trebuchet)
)

#end-if 		;if difficulty = hard



;HARDEST
;--------------



#load-if-defined DIFFICULTY-HARDEST

;Rule34: train trebuchets when we play on hardest and the combat number define that our secondary-combat-siege-unit is trebuchet

(defrule
	(goal SECONDARY-COMBAT-SIEGE-UNIT trebuchet)
	(building-type-count castle >= 1)
	(unit-type-count-total trebuchet < TWO-PERCENT-POP)
	(can-train trebuchet)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(military-population >= FIVE-PERCENT-POP)
	(goal UNDER-ATTACK NO)
=>
	(train trebuchet)
)

#end-if 		;if difficulty = hardest



;******************************************
;******************************************
;MAINTAIN TWO trebuchetS

(defrule
	(military-population > TEN-PERCENT-POP)
	(unit-type-count-total trebuchet < 2)
	(can-train trebuchet)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(goal UNDER-ATTACK NO)
=>
	(train trebuchet)
)
;bombard-cannonS
;===================



;WHEN THE RANDOM NUMBER CHOSE THAT WE'LL TRAIN bombard-cannonS AS THE PRIMARY COMBAT SIEGE UNIT
;---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



;MODERATE
;------------------



#load-if-defined DIFFICULTY-MODERATE

;Rule35: train bombard-cannons when we play on moderate and the combat number define that our primary-combat-siege-unit is bombard-cannon

(defrule
	(goal PRIMARY-COMBAT-SIEGE-UNIT bombard-cannon)
	(building-type-count siege-workshop >= 1)
	(unit-type-count-total bombard-cannon < THREE-PERCENT-POP)
	(can-train bombard-cannon)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(military-population >= FIVE-PERCENT-POP)
=>
	(train bombard-cannon)
)

#end-if 		;if difficulty = moderate



;HARD
;---------



#load-if-defined DIFFICULTY-HARD

;Rule36: train bombard-cannon when we play on hard and the combat number define that our primary-combat-siege-unit is bombard-cannon

(defrule
	(goal PRIMARY-COMBAT-SIEGE-UNIT bombard-cannon)
	(building-type-count siege-workshop >= 1)
	(unit-type-count-total bombard-cannon < FOUR-PERCENT-POP)
	(can-train bombard-cannon)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(military-population >= FIVE-PERCENT-POP)
=>
	(train bombard-cannon)
)

#end-if 		;if difficulty = hard



;HARDEST
;--------------



#load-if-defined DIFFICULTY-HARDEST

;Rule37: train bombard-cannons when we play on hard and the combat number define that our primary-combat-siege-unit is bombard-cannon

(defrule
	(goal PRIMARY-COMBAT-SIEGE-UNIT bombard-cannon)
	(building-type-count siege-workshop >= 1)
	(unit-type-count-total bombard-cannon < FIVE-PERCENT-POP)
	(can-train bombard-cannon)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(military-population >= FIVE-PERCENT-POP)
=>
	(train bombard-cannon)
)

#end-if 		;if difficulty = hardest



;WHEN THE RANDOM NUMBER CHOSE THAT WE'LL TRAIN bombard-cannonS AS THE SECONDARY COMBAT SIEGE UNIT
;--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



;MODERATE
;------------------



#load-if-defined DIFFICULTY-MODERATE

;Rule38: train bombard-cannons when we play on moderate and the combat number define that our secondary-combat-siege-unit is bombard-cannon

(defrule
	(goal SECONDARY-COMBAT-SIEGE-UNIT bombard-cannon)
	(building-type-count siege-workshop >= 1)
	(unit-type-count-total bombard-cannon < ONE-PERCENT-POP)
	(can-train bombard-cannon)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(military-population >= FIVE-PERCENT-POP)
=>
	(train bombard-cannon)
)

#end-if 		;if difficulty = moderate



;HARD
;---------



#load-if-defined DIFFICULTY-HARD

;Rule39: train bombard-cannons when we play on hard and the combat number define that our secondary-combat-siege-unit is bombard-cannon

(defrule
	(goal SECONDARY-COMBAT-SIEGE-UNIT bombard-cannon)
	(building-type-count siege-workshop >= 1)
	(unit-type-count-total bombard-cannon < TWO-PERCENT-POP)
	(can-train bombard-cannon)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(military-population >= FIVE-PERCENT-POP)
=>
	(train bombard-cannon)
)

#end-if 		;if difficulty = hard



;HARDEST
;--------------



#load-if-defined DIFFICULTY-HARDEST

;Rule40: train bombard-cannons when we play on hardest and the combat number define that our secondary-combat-siege-unit is bombard-cannon

(defrule
	(goal SECONDARY-COMBAT-SIEGE-UNIT bombard-cannon)
	(building-type-count siege-workshop >= 1)
	(unit-type-count-total bombard-cannon < TWO-PERCENT-POP)
	(can-train bombard-cannon)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
	(military-population >= FIVE-PERCENT-POP)
=>
	(train bombard-cannon)
)

#end-if 		;if difficulty = hardest



;MAINTAIN SOME BOMBARD CANNONS, BECAUSE THEY ARE SUPERUNITS
;-------------------------------------------------------------------------

(defrule
	(military-population > TEN-PERCENT-POP)
	(unit-type-count-total bombard-cannon < TWO-PERCENT-POP)
	(can-train bombard-cannon)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(goal ABLE-TO-TRAIN-LAND-UNITS YES)
=>
	(train bombard-cannon)
)
;PETARD
;=======



;Rule41: train petards if we are short on resources

;(defrule
;	(or
;		(wood-amount < 180)
;		(gold-amount < 95)
;	)
;	(unit-type-count-total petard < TWO-PERCENT-POP)
;	(can-train petard)
;	(goal ABLE-TO-TRAIN-UNITS YES)
;	(goal RUSH-CONTROL NO)
;	(goal UNDER-ATTACK NO)
;	(military-population > TWENTY-PERCENT-POP)
;=>
;	(train petard)
;)

;that's why it should train spearmen, scouts and skimishers, because they don't cost any gold

#load-if-not-defined TURKISH-CIV

;Rule8: build barrackses if we are all out of gold

(defrule
	(game-time > 1200)
	(dropsite-min-distance gold > 5)
	(gold-amount < 200)
	(food-amount > 600)
	(can-build barracks)
	(or
		(current-age >= feudal-age)
		(building-type-count-total barracks < 2)
	)
	(building-type-count-total barracks < 7)
=>
	(up-modify-sn sn-maximum-town-size g:= TOWN-SIZE-FOR-BUILDING)
	(build barracks)
	(up-modify-sn sn-maximum-town-size g:= TOWN-SIZE-FOR-ATTACKING)
)

;Fill up with spearmen if we have gold trouble
(defrule
	(game-time > 1200)
	(or
		(and
			(dropsite-min-distance gold > 5)
			(gold-amount < 2000)
		)
		(gold-amount < 200)
	)
	(food-amount > 1500)
	(can-train spearman-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
=>
	(train spearman-line)
)

;Mix in some spearmen always as they counter any mounted units and are cheap
(defrule
	(military-population >= TWENTY-FIVE-PERCENT-POP)
	(can-train spearman-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(unit-type-count-total spearman-line < TEN-PERCENT-POP)
=>
	(train spearman-line)
)

(defrule
    (current-age >= castle-age)
	(can-train spearman-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(or
		(and
			(goal UNDER-ATTACK YES)
			(unit-type-count-total spearman-line < FIVE-PERCENT-POP)
		)
		(unit-type-count-total spearman-line < TWO-PERCENT-POP)
	)
=>
	(train spearman-line)
)

#end-if		;if not civ == turkish

#load-if-defined DARK-AGE-END
(defrule
	(wood-amount > 700)
	(can-build barracks)
	(building-type-count-total barracks < 10)
=>
	(up-modify-sn sn-maximum-town-size g:= TOWN-SIZE-FOR-BUILDING)
	(build barracks)
	(up-modify-sn sn-maximum-town-size g:= TOWN-SIZE-FOR-ATTACKING)
)
#end-if

#load-if-not-defined TEUTONIC-CIV

;Rule8: build stables if we are all out of gold

(defrule
	(game-time > 2400)
	(dropsite-min-distance gold > 5)
	(gold-amount < 200)
	(food-amount > 600)
	(can-build stable)
	(building-type-count-total stable < 8)
	(unit-type-count-total trade-cart < 5)
	(unit-type-count-total trade-cog < 5)
=>
	(up-modify-sn sn-maximum-town-size g:= TOWN-SIZE-FOR-BUILDING)
	(build stable)
	(up-modify-sn sn-maximum-town-size g:= TOWN-SIZE-FOR-ATTACKING)
)

;Fill up with scout cavalry if we have gold trouble
(defrule
	(current-age == imperial-age)
	(or
		(and
			(dropsite-min-distance gold > 5)
			(gold-amount < 2000)
		)
		(gold-amount < 200)
	)
	(food-amount > 4000) ; just hammer out scouts if we have tons of food
	(can-train scout-cavalry-line)
	(or
		(goal ABLE-TO-TRAIN-UNITS YES)
		(food-amount > 6000)
	)
	;(unit-type-count-total trade-cart < 5)
	;(unit-type-count-total trade-cog < 5)
=>
	(train scout-cavalry-line)
)

#end-if		;if not civ == teutonic



#load-if-not-defined TURKISH-CIV

;Rule8: build archery-ranges if we are all out of gold

(defrule
	(game-time > 1200)
	(dropsite-min-distance gold > 5)
	(gold-amount < 200)
	(food-amount > 600)
	(can-build archery-range)
	(building-type-count-total archery-range < 7)
=>
	(up-modify-sn sn-maximum-town-size g:= TOWN-SIZE-FOR-BUILDING)
	(build archery-range)
	(up-modify-sn sn-maximum-town-size g:= TOWN-SIZE-FOR-ATTACKING)
)

;Train skimishers to fill up the army if we strugggle for gold.
(defrule
	(current-age >= castle-age)
	(or
		(and
			(dropsite-min-distance gold > 5)
			(gold-amount < 2000)
		)
		(gold-amount < 200)
	)
	(food-amount > 1500)
	(can-train skirmisher-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
=>
	(train skirmisher-line)
)

;When in castle-age, train 10 spearmen to counter some rushes
(defrule
    (current-age >= castle-age)
	(can-train skirmisher-line)
	(goal ABLE-TO-TRAIN-UNITS YES)
	(or
		(and
			(goal UNDER-ATTACK YES)
			(unit-type-count-total skirmisher-line < FIVE-PERCENT-POP)
		)
		(unit-type-count-total skirmisher-line < TWO-PERCENT-POP)
	)
=>
	(train skirmisher-line)
)

#end-if		;if not civ == turkish


#end-if			;if game type != wonder-race
